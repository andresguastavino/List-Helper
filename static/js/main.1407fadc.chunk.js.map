{"version":3,"sources":["classes/CookiesManager.ts","classes/ThemesManager.ts","classes/ModalManager.ts","components/Header/Header.js","classes/ListsManager.ts","components/Item/Item.js","components/Items/Items.js","components/Lista/Lista.js","components/Listas/Listas.js","components/NewItem/NewItem.js","components/NewLista/NewLista.js","components/Main/Main.js","components/Footer/Footer.js","components/Modal/Modal.js","components/ErrorDisplay/ErrorDisplay.js","App.js","reportWebVitals.js","index.js"],"names":["CookiesManager","init","lists","cookies","document","cookie","split","name","trim","listInfo","type","shift","itemsArray","items","item","itemAux","toLowerCase","value","push","list","saveList","length","currentThemeIndex","parseInt","customTheme","mainColor","secondaryColor","borderColor","textColor","saveCookie","i","Date","getFullYear","ThemesManager","themes","newItemStateUpdater","this","getCurrentThemeIndex","buildThemes","darkTheme","getCustomTheme","Object","keys","saveCustomTheme","themeIndex","saveCurrentThemeIndex","updateNewItemsState","stateUpdater","ModalManager","title","message","modalHasAccept","renderModal","callbackAccept","callbackReject","undefined","accept","instance","Header","props","state","theme","showCustomThemeModal","setTheme","bind","changeColor","onMouseAction","themesManager","querySelectorAll","input","checked","setState","inputs","querySelector","style","backgroundColor","className","currentTheme","getCurrentTheme","div","color","inputBorderColor","verticalSeparatorStyle","id","onClick","htmlFor","onChange","onMouseEnter","onMouseLeave","Component","ListsManager","currentListIndex","setLists","j","k","listAux","getLists","index","getCurrentList","override","alreadyExists","itemName","itemNewValue","currentList","listToDelete","deleteList","Item","states","colors","currentState","quantity","setStatesAndColors","changeState","increase","listsManager","updateItemValue","increment","itemStyle","unselectable","Items","getItems","exportAsJson","onEditItems","listAsJSON","JSON","stringify","textArea","createElement","body","append","select","execCommand","removeChild","getInstance","setModalInfo","Lista","selectList","buildClassName","setCurrentListIndex","isCalledFromRender","replace","indexOf","Listas","listLists","listsAux","newList","NewItem","stateUpdates","addNewItemStateUpdater","NewLista","itemInputsAddRate","itemInputs","createList","createListFromForm","createListFromJSON","createItemsInputs","addItemInputs","firstChar","charAt","initialState","itemInput","parse","error","String","totalInputs","cancelNewList","horizontalSeparatorStyle","resizable","rows","cols","Main","showNewListComponent","setStateUpdater","saveCurrentList","getCurrentListIndex","Footer","href","Modal","modalManager","show","hasAccept","cancel","setModalRenderer","getTitle","getMessage","ErrorDisplay","pFontSize","cookiesNotAccepted","fontSize","App","cookiesAccepted","acceptCookies","setCustomTheme","setCurrentTheme","noSupportForCurrentResolution","window","screen","width","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1407fadc.chunk.js","sourcesContent":["export default class CookiesManager {\r\n\r\n    static getLists(init : boolean) : any[] {\r\n        let lists = [];\r\n        let cookies = document.cookie;\r\n        if(cookies !== '') {\r\n            for(let cookie of cookies.split(';')) {\r\n                let name = cookie.split('=')[0].trim();\r\n\r\n                if(name !== 'currentThemeIndex' && name !== 'customTheme') {\r\n                    let listInfo = cookie.split('=')[1].split(',');\r\n                    let type = listInfo[0];\r\n                    listInfo.shift();\r\n                    let itemsArray = listInfo;\r\n\r\n                    let items = [];\r\n                    for(let item of itemsArray) {\r\n                        let itemAux = {\r\n                            \"name\": item.split(':')[0].trim(),\r\n                            \"value\": ''\r\n                        }\r\n\r\n                        if(type.toLowerCase() === 'daily' && init) {\r\n                            itemAux.value = 'Ausent';\r\n                        } else {\r\n                            itemAux.value = item.split(':')[1].trim();\r\n                        }\r\n\r\n                        items.push(itemAux);\r\n                    }\r\n\r\n                    let list ={\r\n                        \"name\": name,\r\n                        \"type\": type, \r\n                        \"items\": items\r\n                    };\r\n\r\n                    lists.push(list);\r\n\r\n                    if(type.toLowerCase() === 'daily' && init) {\r\n                        CookiesManager.saveList(list);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return lists.length > 0 ? lists : [];\r\n    }\r\n\r\n    static getCurrentThemeIndex() : number {\r\n        let currentThemeIndex = 0;\r\n        let cookies = document.cookie;\r\n        if(cookies !== '') {\r\n            for(let cookie of cookies.split(';')) {\r\n                let name = cookie.split('=')[0].trim();\r\n\r\n                if(name === 'currentThemeIndex') {\r\n                    currentThemeIndex = parseInt(cookie.split('=')[1].split(',')[0]);\r\n                } \r\n            }\r\n        }\r\n\r\n        return currentThemeIndex;\r\n    }\r\n\r\n    static getCustomTheme() : any {\r\n        let customTheme = {};\r\n        let cookies = document.cookie;\r\n        if(cookies !== '') {\r\n            for(let cookie of cookies.split(';')) {\r\n                let name = cookie.split('=')[0].trim();\r\n\r\n                if(name === 'customTheme') {\r\n                    let items = cookie.split('=')[1].split(',');\r\n                    customTheme = {\r\n                        \"mainColor\": items[0],\r\n                        \"secondaryColor\": items[1],\r\n                        \"borderColor\": items[2],\r\n                        \"textColor\": items[3]\r\n                    };\r\n                }\r\n            }\r\n        }\r\n\r\n        return customTheme;\r\n    }\r\n\r\n    static saveCustomTheme(customTheme: any) : void {\r\n        let cookie = 'customTheme=' +  customTheme.mainColor + ',' +  customTheme.secondaryColor + ',' + \r\n            customTheme.borderColor + ',' + customTheme.textColor;\r\n        CookiesManager.saveCookie(cookie);\r\n            \r\n    }\r\n\r\n    static saveCurrentThemeIndex(currentThemeIndex: number) : void {\r\n        let cookie = 'currentThemeIndex=' + currentThemeIndex;\r\n        CookiesManager.saveCookie(cookie);\r\n    }\r\n\r\n    static saveList(list : any) : void {\r\n        let cookie = list.name + '=' + list.type + ',';\r\n\r\n        for(let i = 0; i < list.items.length; i++) {\r\n            let item = list.items[i];\r\n            cookie += item.name + ':' + item.value;\r\n\r\n            if(i !== list.items.length - 1) {\r\n                cookie += ',';\r\n            }\r\n        }\r\n        CookiesManager.saveCookie(cookie);\r\n    }\r\n\r\n    static saveCookie(cookie: string) : void {\r\n        cookie += '; Path=/; Expires=Thu, 01 Jan ' + (new Date().getFullYear() + 1)  + ' 00:00:00 GMT;';\r\n        document.cookie = cookie;\r\n    }\r\n\r\n    static deleteList(list: any) : void {\r\n        let cookie = list.name + '=; Path=/; Expires=Thu, 01 Jan 1970 00:00:00 GMT;';\r\n        document.cookie = cookie;\r\n    }\r\n \r\n}","import CookiesManager from './CookiesManager';\r\n\r\nexport default class ThemesManager {\r\n\r\n    themes: Object[] = [];\r\n    currentThemeIndex: number = 0;\r\n    newItemStateUpdater: Function[] = [];\r\n\r\n    constructor() {\r\n        this.currentThemeIndex = CookiesManager.getCurrentThemeIndex();\r\n        this.buildThemes();\r\n    }\r\n\r\n    buildThemes() : void {\r\n        let lightTheme = {\r\n            mainColor: '#fff',\r\n            secondaryColor: '#fff',\r\n            borderColor: '#000',\r\n            textColor: '#000'\r\n        };\r\n\r\n        let darkTheme = { \r\n            mainColor: '#000',\r\n            secondaryColor: '#201e25',\r\n            borderColor: '#383434',\r\n            textColor: '#fff'\r\n        };\r\n\r\n        let customTheme = CookiesManager.getCustomTheme();\r\n\r\n        this.themes = [\r\n            lightTheme,\r\n            darkTheme,\r\n            Object.keys(customTheme).length > 0 ? customTheme : darkTheme\r\n        ];\r\n    }\r\n\r\n    getCurrentTheme() : Object {\r\n        return this.themes[this.currentThemeIndex];\r\n    }\r\n\r\n    getCustomTheme() : Object {\r\n        return this.themes[2];\r\n    }\r\n\r\n    getCurrentThemeIndex() : number {\r\n        return this.currentThemeIndex;\r\n    }\r\n\r\n    setCustomTheme(customTheme: Object) : void {\r\n        this.themes[2] = customTheme;\r\n        CookiesManager.saveCustomTheme(customTheme);\r\n    }\r\n\r\n    setCurrentTheme(themeIndex: number) : void {\r\n        this.currentThemeIndex = themeIndex;\r\n        CookiesManager.saveCurrentThemeIndex(themeIndex);\r\n        this.updateNewItemsState();\r\n    }\r\n\r\n    updateNewItemsState() : void {\r\n        for(let i = 0; i < this.newItemStateUpdater.length; i++) {\r\n            this.newItemStateUpdater[i]();\r\n        }\r\n    }\r\n\r\n    addNewItemStateUpdater(stateUpdater : Function) : void {\r\n        this.newItemStateUpdater.push(stateUpdater);\r\n    }\r\n\r\n}   ","export default class ModalManager {\r\n\r\n    private static instance : ModalManager = new ModalManager();\r\n    private title : string = '';\r\n    private message : string = '';\r\n    private modalHasAccept : boolean = false;\r\n    private renderModal : Function = () => {};\r\n    private callbackAccept : Function = () => {};\r\n    private callbackReject : Function = () => {};\r\n\r\n    private constructor() {}\r\n\r\n    static getInstance() : ModalManager {\r\n        return this.instance;\r\n    }\r\n\r\n    setModalInfo(title : string, message : string, modalHasAccept : boolean, callbackAccept ?: Function, callbackReject ?: Function) : void {\r\n        this.title = title;\r\n        this.message = message;\r\n        this.modalHasAccept = modalHasAccept;\r\n        this.callbackAccept = callbackAccept !== undefined ? callbackAccept : () => {};\r\n        this.callbackReject = callbackReject !== undefined ? callbackReject : () => {};\r\n        this.renderModal();\r\n    }\r\n\r\n    setModalRenderer(renderModal : Function) : void {\r\n        this.renderModal = renderModal;\r\n    }\r\n\r\n    accept(accept : boolean) : void {\r\n        if(accept) {\r\n            this.callbackAccept();\r\n        } else {\r\n            this.callbackReject();\r\n        }\r\n    }\r\n\r\n    getTitle() : string {\r\n        return this.title;\r\n    }\r\n\r\n    getMessage() : string {\r\n        return this.message;\r\n    }\r\n\r\n    hasAccept() : boolean { \r\n        return this.modalHasAccept;\r\n    }\r\n\r\n}","import React, { Component } from 'react';\r\n\r\n/* Stylesheets */\r\nimport './Header.css';\r\n\r\nexport default class Header extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            theme: 0,\r\n            mainColor: '#000',\r\n            secondaryColor: '#000',\r\n            borderColor: '#000',\r\n            textColor: '#000',\r\n            showCustomThemeModal: false,\r\n        }\r\n\r\n        this.setTheme = this.setTheme.bind(this);\r\n        this.changeColor = this.changeColor.bind(this);\r\n        this.onMouseAction = this.onMouseAction.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { themesManager } = this.props;\r\n        const customTheme = themesManager.getCustomTheme();\r\n        const currentThemeIndex = themesManager.getCurrentThemeIndex();\r\n\r\n        for(let input of document.querySelectorAll('input[type=\"radio\"]')) {\r\n            if(parseInt(input.value) === currentThemeIndex) {\r\n                input.checked = true;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            theme: currentThemeIndex,\r\n            mainColor: customTheme.mainColor,\r\n            secondaryColor: customTheme.secondaryColor,\r\n            borderColor: customTheme.borderColor,\r\n            textColor: customTheme.textColor,\r\n            showCustomThemeModal: currentThemeIndex === 2,\r\n        });\r\n    }\r\n   \r\n    setTheme(themeIndex) {\r\n        let customTheme;\r\n        let showCustomThemeModal = true;\r\n\r\n        if(themeIndex === 2) {\r\n            let inputs = document.querySelectorAll('input[type=\"color\"]');\r\n            customTheme = {\r\n                mainColor: inputs[0].value,\r\n                secondaryColor: inputs[1].value,\r\n                borderColor: inputs[2].value,\r\n                textColor: inputs[3].value\r\n            };\r\n        } else {\r\n            showCustomThemeModal = false;\r\n        }\r\n\r\n        this.setState({showCustomThemeModal});\r\n        this.props.setTheme(themeIndex, customTheme);\r\n    }\r\n\r\n    changeColor(input) {\r\n        let value = document.querySelector('#' + input).value;\r\n        let span = document.querySelector('#sp-' + input);\r\n        span.style.backgroundColor = value;\r\n        \r\n        switch(input) {\r\n            case 'main-color':\r\n                this.setState({mainColor: value});\r\n                break;\r\n            case 'secondary-color':\r\n                this.setState({secondaryColor: value});\r\n                break;\r\n            case 'border-color':\r\n                this.setState({borderColor: value});\r\n                break;\r\n            default:\r\n                this.setState({textColor: value});\r\n                break;\r\n        }\r\n    }\r\n\r\n    onMouseAction(className, type) {\r\n        const { themesManager } = this.props;\r\n        const currentTheme = themesManager.getCurrentTheme();\r\n        \r\n        let div = document.querySelector('.' + className);\r\n\r\n        if(type === 'enter') {\r\n            div.style.backgroundColor = currentTheme.textColor;\r\n            div.style.color = currentTheme.mainColor;\r\n        } else {\r\n            div.style.backgroundColor = currentTheme.mainColor;\r\n            div.style.color = currentTheme.textColor;\r\n        }\r\n\r\n    }\r\n\r\n    render() {   \r\n        const { themesManager } = this.props;\r\n        const currentTheme = themesManager.getCurrentTheme();\r\n\r\n        const { mainColor, secondaryColor, borderColor, textColor, showCustomThemeModal } = this.state; \r\n\r\n        const inputBorderColor = currentTheme.borderColor;\r\n\r\n        const style = {\r\n            backgroundColor: currentTheme.mainColor,\r\n            borderColor: currentTheme.borderColor,\r\n            color: currentTheme.textColor\r\n        }\r\n\r\n        const verticalSeparatorStyle = {\r\n            backgroundColor: currentTheme.borderColor\r\n        }\r\n\r\n        return(\r\n            <div className=\"header\" style={style} >\r\n                <div className=\"text-holder\">\r\n                    <h1>List Helper</h1>\r\n                </div>\r\n                <div className=\"vertical-separator\" style={verticalSeparatorStyle} />\r\n                <div className=\"vertical-separator\" style={verticalSeparatorStyle} />\r\n                <div className=\"theme-group-holder\">\r\n                    <div className=\"input-group-title\">\r\n                        <p>Theme</p>\r\n                    </div>\r\n                    <div className=\"input-group\">\r\n                        <input type=\"radio\" name=\"theme\" id=\"light\" value=\"0\" onClick={() => this.setTheme(0)}/>\r\n                        <label htmlFor=\"light\">Light</label>\r\n                    </div>\r\n                    <div className=\"input-group\">\r\n                        <input type=\"radio\" name=\"theme\" id=\"dark\" value=\"1\" onClick={() => this.setTheme(1)}/>\r\n                        <label htmlFor=\"dark\">Dark</label>\r\n                    </div>\r\n                    <div className=\"input-group\">\r\n                        <input type=\"radio\" name=\"theme\" id=\"custom\" value=\"2\" onClick={() => this.setState({showCustomThemeModal: true})}/>\r\n                        <label htmlFor=\"custom\">Custom</label>\r\n                    </div>\r\n                </div>\r\n                { showCustomThemeModal ? <div className=\"vertical-separator\" style={verticalSeparatorStyle} /> : '' }\r\n                { showCustomThemeModal ? <div className=\"vertical-separator\" style={verticalSeparatorStyle} /> : '' }\r\n                { showCustomThemeModal ?\r\n                    <div className=\"custom-theme-modal\">\r\n                        <div className=\"color-input-group\">\r\n                            <label htmlFor=\"main-color\">\r\n                                <span className=\"color-input\" id=\"sp-main-color\" style={{backgroundColor: mainColor, borderColor: inputBorderColor}} />\r\n                            </label>\r\n                            <input type=\"color\" id=\"main-color\" value={mainColor} onChange={() => this.changeColor('main-color')} />\r\n                            <label htmlFor=\"main-color\">Main</label>\r\n                        </div>\r\n                        <div className=\"color-input-group\">\r\n                            <label htmlFor=\"secondary-color\">\r\n                                <span className=\"color-input\" id=\"sp-secondary-color\" style={{backgroundColor: secondaryColor, borderColor: inputBorderColor}} />\r\n                            </label>\r\n                            <input type=\"color\" id=\"secondary-color\" value={secondaryColor} onChange={() => this.changeColor('secondary-color')} />\r\n                            <label htmlFor=\"secondary-color\">Secondary</label>\r\n                        </div>\r\n                        <div className=\"color-input-group\">\r\n                            <label htmlFor=\"border-color\">\r\n                                <span className=\"color-input\" id=\"sp-border-color\" style={{backgroundColor: borderColor, borderColor: inputBorderColor}} />\r\n                            </label>\r\n                            <input type=\"color\" id=\"border-color\" value={borderColor} onChange={() => this.changeColor('border-color')} />\r\n                            <label htmlFor=\"border-color\">Border</label>\r\n                        </div>\r\n                        <div className=\"color-input-group\">\r\n                            <label htmlFor=\"text-color\">\r\n                                <span className=\"color-input\" id=\"sp-text-color\" style={{backgroundColor: textColor, borderColor: inputBorderColor}} />\r\n                            </label>\r\n                            <input type=\"color\" id=\"text-color\" value={textColor} onChange={() => this.changeColor('text-color')} />\r\n                            <label htmlFor=\"text-color\">Text</label>\r\n                        </div>\r\n                        <div className=\"color-input-group\">\r\n                            <button type=\"button\" className=\"apply-button\" style={style} onClick={() => this.setTheme(2)} onMouseEnter={() => this.onMouseAction('apply-button', 'enter')} onMouseLeave={() => this.onMouseAction('apply-button', 'leave')} >Apply</button>\r\n                        </div>\r\n                    </div> : ''\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import CookiesManager from './CookiesManager';\r\n\r\nexport default class ListsManager {\r\n\r\n    lists: any[] = [];\r\n    currentListIndex: number = -1;\r\n    stateUpdater: Function = () => {};\r\n\r\n    constructor() {\r\n        this.setLists(true);\r\n    }\r\n\r\n    getLists() : any[] {\r\n        let lists = this.lists;\r\n\r\n        for(let i = 0; i < lists.length; i++) {\r\n            for(let j = i + 1; j < lists.length; j++) {\r\n                for(let k = 0; k < lists[i].name.length; k++) {\r\n                    if(k < lists[j].name.length) {\r\n                        if(lists[j].name[k] < lists[i].name[k]) {\r\n                            let listAux = lists[j];\r\n                            lists[j] = lists[i];\r\n                            lists[i] = listAux;\r\n                            break;\r\n                        }\r\n                    } else {\r\n                        break;\r\n                    }\r\n                }\r\n                \r\n            }\r\n        }\r\n\r\n        return lists;\r\n    }\r\n\r\n    getCurrentList() : any {\r\n        return this.lists[this.currentListIndex];\r\n    }\r\n\r\n    getCurrentListIndex() : number {\r\n        return this.currentListIndex;\r\n    }\r\n\r\n    setLists(init : boolean) : void {\r\n        this.lists = CookiesManager.getLists(init);\r\n    }\r\n\r\n    setCurrentListIndex(index : number) : void {\r\n        if(this.currentListIndex !== -1 && this.getCurrentList().type.toLowerCase() !== 'daily')  {\r\n            CookiesManager.saveList(this.getCurrentList());\r\n            this.setLists(false);\r\n        }\r\n\r\n        this.currentListIndex = index;\r\n        this.stateUpdater();\r\n    }\r\n\r\n    setStateUpdater(stateUpdater : Function) : void {\r\n        this.stateUpdater = stateUpdater;\r\n    }\r\n\r\n    createList(list : any, override ?: boolean) : number {\r\n        if(override === undefined) {\r\n            override = false;\r\n        }\r\n\r\n        let lists = this.lists;\r\n        let alreadyExists = false;\r\n\r\n        for(let i = 0; i < lists.length; i++) {\r\n            if(lists[i].name === list.name) {\r\n                alreadyExists = true;\r\n            }\r\n        }\r\n\r\n        if(alreadyExists) {\r\n            if(!override) {\r\n                return -1;\r\n            }\r\n        }\r\n\r\n        CookiesManager.saveList(list);\r\n        this.setLists(false);\r\n\r\n        lists = this.lists;\r\n        for(let i = 0; i < lists.length; i++) {\r\n            if(lists[i].name === list.name) {\r\n                this.currentListIndex = i;\r\n            }\r\n        }\r\n\r\n        this.stateUpdater();\r\n        return 0;\r\n    }\r\n    \r\n    saveCurrentList() : void {\r\n        if(this.currentListIndex !== -1 && this.getCurrentList().type.toLowerCase() !== 'daily') {\r\n            CookiesManager.saveList(this.getCurrentList());\r\n            this.setLists(false);\r\n        }\r\n    }\r\n\r\n    updateItemValue(itemName : string, itemNewValue : string | number) : void {\r\n        let currentList = this.getCurrentList();\r\n\r\n        for(let i = 0; i < currentList.items.length; i++) {\r\n            if(currentList.items[i].name === itemName) {\r\n                currentList.items[i].value = itemNewValue;\r\n            }\r\n        }\r\n\r\n        CookiesManager.saveList(currentList);\r\n        this.stateUpdater();\r\n    }\r\n\r\n    deleteList(index : number) : void {\r\n        let currentList = this.lists[this.currentListIndex];\r\n        let listToDelete = this.lists[index];\r\n        if(this.currentListIndex !== -1) {\r\n            if(currentList.name === listToDelete.name) {\r\n                this.currentListIndex = -1;\r\n            }\r\n        }\r\n\r\n        CookiesManager.deleteList(listToDelete);\r\n        this.setLists(false);\r\n        this.stateUpdater();\r\n    }\r\n\r\n}","import React, { Component } from 'react';\r\n\r\n/* Stylesheets */\r\nimport './Item.css';\r\n\r\nexport default class Item extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            states: [],\r\n            colors: [],\r\n            currentState: 0,\r\n            quantity: 0,\r\n        }\r\n\r\n        this.setStatesAndColors = this.setStatesAndColors.bind(this);\r\n        this.changeState = this.changeState.bind(this);\r\n        this.increase = this.increase.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setStatesAndColors();\r\n    }\r\n\r\n    setStatesAndColors() {\r\n        const { type, value } = this.props;\r\n        let states = [];\r\n        let colors = [];\r\n        let currentState = 0;\r\n        let quantity = 0;\r\n\r\n        switch(type.toLowerCase()) {\r\n            case 'daily':\r\n                states = ['Ausent', 'Here', 'Spoke'];\r\n                colors = ['#a43333', '#201e25', '#33b033'];\r\n                break;\r\n            case 'dual-state':\r\n                states = ['Pending', 'Done'];\r\n                colors = ['#201e25', '#33b033'];\r\n                break;\r\n            case 'triple-state':\r\n                states = ['Pending', 'In progress', 'Done'];\r\n                colors = ['#201e25', '#29477a', '#33b033'];\r\n                break;\r\n            default:\r\n                colors = ['#d4942a'];\r\n                break;\r\n        }\r\n        \r\n        if(type.toLowerCase() === 'daily') {\r\n            switch(value) {\r\n                case 'Ausent':\r\n                    currentState = 0;\r\n                    break;\r\n                case 'Here':\r\n                    currentState = 1;\r\n                    break;\r\n                default:\r\n                    currentState = 2;\r\n                    break;\r\n            }\r\n        } else if(type.toLowerCase() === 'dual-state' || type.toLowerCase() === 'triple-state') {\r\n            switch(value) {\r\n                case 'Pending':\r\n                    currentState = 0;\r\n                    break;\r\n                case 'In progress':\r\n                    currentState = 1;\r\n                    break;\r\n                default:\r\n                    currentState = type.toLowerCase() === 'dual-state' ? 1 : 2;\r\n                    break;\r\n            }\r\n        } else {\r\n            quantity = value;\r\n        }\r\n\r\n        this.setState({\r\n            states,\r\n            colors,\r\n            currentState,\r\n            quantity\r\n        });\r\n    }\r\n\r\n    changeState() {\r\n        let { states, currentState } = this.state;\r\n        const { name, listsManager } = this.props;\r\n        currentState = currentState + 1 >= states.length ? 0 : currentState + 1;\r\n        this.setState({currentState: currentState});\r\n        listsManager.updateItemValue(name, states[currentState]);\r\n    }\r\n\r\n    increase(increment) {\r\n        let { quantity } = this.state;\r\n        const { name, listsManager } = this.props;\r\n        this.setState({quantity: quantity + increment});\r\n        listsManager.updateItemValue(name, quantity);\r\n    }\r\n\r\n    render() {\r\n        const { name, type, themesManager } = this.props;\r\n        const currentTheme = themesManager.getCurrentTheme();\r\n\r\n        const { states, colors, currentState, quantity } = this.state;\r\n\r\n        const style = {\r\n            borderColor: currentTheme.borderColor\r\n        }\r\n\r\n        const itemStyle = {\r\n            borderColor: currentTheme.borderColor,\r\n            backgroundColor: colors[currentState]\r\n        }\r\n\r\n        if(type.toLowerCase() !== 'quantities') {\r\n            return(\r\n                <div className=\"item\" style={itemStyle} onClick={this.changeState} >\r\n                    <div className=\"item-nombre\" style={style}>\r\n                        <p unselectable=\"on\">{name}</p>\r\n                    </div>\r\n                    <div className=\"item-state\">\r\n                        <p unselectable=\"on\">\r\n                            {states[currentState]}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else {\r\n            return(\r\n                <div className=\"item-quantity\" style={itemStyle} >\r\n                    <div className=\"decrease\" style={style} onClick={() => this.increase(-100)}>{'<<<'}</div>\r\n                    <div className=\"decrease middle-decrease\" style={style} onClick={() => this.increase(-10)}>{'<<'}</div>\r\n                    <div className=\"decrease\" style={style} onClick={() => this.increase(-1)}>{'<'}</div>\r\n                    <div className=\"item-info\" style={style}>\r\n                        <div className=\"item-nombre\" style={style}>\r\n                            <p unselectable=\"on\">{quantity}</p>\r\n                        </div>\r\n                        <div className=\"item-state\">\r\n                            <p unselectable=\"on\">\r\n                                {name}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"increase\" style={style} onClick={() => this.increase(1)}>{'>'}</div>\r\n                    <div className=\"increase middle-increase\" style={style} onClick={() => this.increase(10)}>{'>>'}</div>\r\n                    <div className=\"increase\" style={style} onClick={() => this.increase(100)}>{'>>>'}</div> \r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\n/* Classes */\r\nimport ModalManager from './../../classes/ModalManager';\r\n\r\n/* Components */\r\nimport Item from './../Item/Item';\r\n\r\n/* Stylesheets */\r\nimport './Items.css'\r\n\r\nexport default class Items extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.getItems = this.getItems.bind(this);\r\n        this.exportAsJson = this.exportAsJson.bind(this);\r\n        this.onMouseAction = this.onMouseAction.bind(this);\r\n        this.onEditItems = this.onEditItems.bind(this);\r\n    }\r\n\r\n    getItems() {\r\n        const { listsManager, themesManager } = this.props;\r\n        const currentList = listsManager.getCurrentList();\r\n\r\n        if(currentList !== undefined && currentList.items !== undefined) {\r\n            let items = [];\r\n\r\n            for(let i = 0; i < currentList.items.length; i++) {\r\n                let item = currentList.items[i];\r\n\r\n                items.push(\r\n                    <Item \r\n                        key={currentList.name + i} \r\n                        name={item.name} \r\n                        value={item.value} \r\n                        type={currentList.type} \r\n                        listsManager={listsManager} \r\n                        themesManager={themesManager} \r\n                    />\r\n                );\r\n            }\r\n    \r\n            return items;\r\n        }\r\n    }\r\n\r\n    exportAsJson() {\r\n        let { listsManager } = this.props;\r\n        const list = listsManager.getCurrentList();\r\n\r\n        let items = [];\r\n        for(let item of list.items) {\r\n            let { name, value } = item;\r\n            item = {\r\n                \"name\": name,\r\n                \"value\": value\r\n            };\r\n            items.push(item);\r\n        }\r\n        list.items = items;\r\n\r\n        let listAsJSON = JSON.stringify(list);\r\n\r\n        let textArea = document.createElement('textarea');\r\n        textArea.value = listAsJSON;\r\n        document.body.append(textArea);\r\n        textArea.select();\r\n        document.execCommand('copy');\r\n        document.body.removeChild(textArea);\r\n        ModalManager.getInstance().setModalInfo('Success', 'List coppied to clipboard as JSON', false);\r\n    }\r\n\r\n    onMouseAction(className, type) {\r\n        const { themesManager } = this.props;\r\n        const currentTheme = themesManager.getCurrentTheme();\r\n\r\n        let div = document.querySelector('.' + className);\r\n        if(type === 'enter') {\r\n            div.style.backgroundColor = currentTheme.textColor;\r\n            div.style.color = currentTheme.mainColor;\r\n        } else {\r\n            div.style.backgroundColor = currentTheme.mainColor;\r\n            div.style.color = currentTheme.textColor;\r\n        }\r\n    }\r\n\r\n    onEditItems() {\r\n        ModalManager.getInstance().setModalInfo('Oops! ¯\\\\_(ツ)_/¯', 'Feature not ready yet', false);\r\n    }\r\n\r\n    render() {\r\n        const { listsManager, themesManager } = this.props;\r\n        const currentTheme = themesManager.getCurrentTheme();\r\n        const list = listsManager.getCurrentList();\r\n\r\n        const style = {\r\n            backgroundColor: currentTheme.mainColor,\r\n            borderColor: currentTheme.borderColor,\r\n            color: currentTheme.textColor\r\n        }\r\n\r\n        return(\r\n            <div className=\"items\" style={style}>\r\n                <div className=\"items-header\" style={style}>\r\n                    <div className=\"items-title\">\r\n                        <p>{list.name + ' > Items / ' + list.type}</p>\r\n                    </div>\r\n                    <div className=\"items-buttons\">\r\n                        <div className=\"edit-items-button\" style={style} onClick={this.onEditItems} onMouseEnter={() => this.onMouseAction('edit-items-button', 'enter')} onMouseLeave={() => this.onMouseAction('edit-items-button', 'leave')} >\r\n                            <p>Edit list items</p>\r\n                        </div>\r\n                        <div className=\"export-json-button\" style={style} onClick={this.exportAsJson} onMouseEnter={() => this.onMouseAction('export-json-button', 'enter')} onMouseLeave={() => this.onMouseAction('export-json-button', 'leave')} >\r\n                            <p>Export list as JSON</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"items-list\">\r\n                    {this.getItems()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\n/* Stylesheets */\r\nimport './Lista.css';\r\n\r\nexport default class Lista extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.selectList = this.selectList.bind(this);\r\n        this.deleteList = this.deleteList.bind(this);\r\n        this.onMouseAction = this.onMouseAction.bind(this);\r\n        this.buildClassName = this.buildClassName.bind(this);\r\n    }\r\n\r\n    selectList() {\r\n        const { listsManager, index} = this.props;\r\n        listsManager.setCurrentListIndex(index);\r\n    }\r\n\r\n    deleteList() {\r\n        const { listsManager, index } = this.props;\r\n        listsManager.deleteList(index);\r\n    }\r\n\r\n    onMouseAction(type, index) {\r\n        const { themesManager } = this.props;\r\n        const currentTheme = themesManager.getCurrentTheme();\r\n\r\n        let className = this.buildClassName(false);\r\n        let div = document.querySelectorAll(className)[index];\r\n\r\n        if(type === 'enter') {\r\n            div.style.backgroundColor = currentTheme.textColor;\r\n            div.style.color = currentTheme.mainColor;\r\n        } else {\r\n            div.style.backgroundColor = currentTheme.mainColor;\r\n            div.style.color = currentTheme.textColor;\r\n        }\r\n    }\r\n\r\n    buildClassName(isCalledFromRender) {\r\n        const { name } = this.props;\r\n        let className;\r\n\r\n        if(isCalledFromRender) {\r\n            className = name.replace(' ', '');\r\n        } else {\r\n            className = '.' + name.replace(' ', '');\r\n        }\r\n\r\n        while(className.indexOf(' ') !== -1) {\r\n            className = className.replace(' ', '');\r\n        }\r\n\r\n        return className.toLowerCase();\r\n    }\r\n\r\n    render() {\r\n        const { themesManager, name } = this.props;\r\n        const currentTheme = themesManager.getCurrentTheme();\r\n\r\n        const style = {\r\n            backgroundColor: currentTheme.mainColor,\r\n            borderColor: currentTheme.borderColor,\r\n            color: currentTheme.textColor\r\n        };\r\n        \r\n        let className = this.buildClassName(true);\r\n\r\n        return(\r\n            <div className=\"lista\" style={style}>\r\n                <div className={\"button \" + className} \r\n                    style={style} \r\n                    onClick={this.selectList}\r\n                    onMouseEnter={() => this.onMouseAction('enter', 0)}\r\n                    onMouseLeave={() => this.onMouseAction('leave', 0)}\r\n                >\r\n                    <p unselectable=\"on\">{name}</p>\r\n                </div>\r\n                <div className={\"button \" + className} \r\n                    style={style} \r\n                    onClick={this.deleteList}\r\n                    onMouseEnter={() => this.onMouseAction('enter', 1)}\r\n                    onMouseLeave={() => this.onMouseAction('leave', 1)}\r\n                >\r\n                    <p>(-)</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React, { Component } from 'react';\r\n\r\n/* Components */\r\nimport Lista from './../Lista/Lista';\r\n\r\n/* Stylesheets */\r\nimport './Listas.css';\r\n\r\nexport default class Listas extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.listLists = this.listLists.bind(this);\r\n        this.onMouseAction = this.onMouseAction.bind(this);\r\n    }\r\n\r\n    listLists() {\r\n        const { themesManager, listsManager } = this.props;\r\n        let lists = listsManager.getLists();\r\n        let listsAux = [];\r\n\r\n        if(lists.length !== 0) {\r\n            for(let i = 0; i < lists.length; i++) {\r\n                let list = lists[i];\r\n\r\n                listsAux.push(\r\n                    <Lista  \r\n                        key={i} \r\n                        index={i}\r\n                        name={list.name} \r\n                        listsManager={listsManager}\r\n                        themesManager={themesManager}\r\n                    />\r\n                );\r\n            }\r\n        }\r\n\r\n        if(listsAux.length !== 0) {\r\n            return listsAux;\r\n        } else {\r\n            return (\r\n                <div className=\"no-lists\">\r\n                    <p>There are no lists to show</p>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    onMouseAction(className, type) {\r\n        const { themesManager } = this.props;\r\n        const currentTheme = themesManager.getCurrentTheme();\r\n\r\n        let div = document.querySelector('.' + className);\r\n\r\n        if(type === 'enter') {\r\n            div.style.backgroundColor = currentTheme.textColor;\r\n            div.style.color = currentTheme.mainColor;\r\n        } else {\r\n            div.style.backgroundColor = currentTheme.mainColor;\r\n            div.style.color = currentTheme.textColor;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { themesManager, newList } = this.props;\r\n        const currentTheme = themesManager.getCurrentTheme();\r\n\r\n        const style = {\r\n            backgroundColor: currentTheme.mainColor,\r\n            borderColor: currentTheme.borderColor,\r\n            color: currentTheme.textColor\r\n        }\r\n\r\n        return(\r\n            <div className=\"listas\" style={style}>\r\n                <div className=\"listas-header\" style={style}>\r\n                    <p>Lists</p>\r\n                </div>\r\n                <div className=\"listado-listas\">\r\n                    {this.listLists()}\r\n                </div>\r\n                <div className=\"nueva-lista\" \r\n                    style={style} \r\n                    onClick={newList}\r\n                    onMouseEnter={() => this.onMouseAction('nueva-lista', 'enter')}\r\n                    onMouseLeave={() => this.onMouseAction('nueva-lista', 'leave')}\r\n                >\r\n                    <p>(+) New List</p>\r\n                </div>  \r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class NewItem extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state =  {\r\n            stateUpdates: 0,\r\n        }\r\n\r\n        this.stateUpdater = this.stateUpdater.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { themesManager } = this.props;\r\n        themesManager.addNewItemStateUpdater(this.stateUpdater);\r\n    }\r\n\r\n    stateUpdater() {\r\n        this.setState((state) => ({stateUpdates: state.stateUpdates + 1}));\r\n    }\r\n\r\n    render() {\r\n        const { themesManager } = this.props;\r\n        const currentTheme = themesManager.getCurrentTheme();\r\n\r\n        const style = {\r\n            backgroundColor: currentTheme.mainColor,\r\n            borderColor: currentTheme.borderColor,\r\n            color: currentTheme.textColor\r\n        }\r\n\r\n        return(\r\n            <div className=\"new-item\">\r\n                <input type=\"text\" style={style} />\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}","import React, { Component } from 'react';\r\n\r\n/* Classes */\r\nimport ModalManager from './../../classes/ModalManager';\r\n\r\n/* Components */\r\nimport NewItem from './../NewItem/NewItem';\r\n\r\n/* Stylesheets */\r\nimport './NewLista.css';\r\n\r\nexport default class NewLista extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            itemInputsAddRate: 5,\r\n            itemInputs: [],\r\n        }\r\n\r\n        this.createList = this.createList.bind(this);\r\n        this.createListFromForm = this.createListFromForm.bind(this);\r\n        this.createListFromJSON = this.createListFromJSON.bind(this);\r\n        this.createItemsInputs = this.createItemsInputs.bind(this);\r\n        this.addItemInputs = this.addItemInputs.bind(this);\r\n        this.onMouseAction = this.onMouseAction.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.createItemsInputs();\r\n    }\r\n\r\n    createList(list) {\r\n        const { listsManager } = this.props;\r\n\r\n        if(listsManager.createList(list) === -1) {\r\n            ModalManager.getInstance().setModalInfo(\r\n                'List already exists', \r\n                'There is already a list with the same name. Do you want to override it\\'s type and items?', \r\n                true,\r\n                function() {\r\n                    listsManager.createList(list, true);\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    createListFromForm() {\r\n        let name = document.querySelector('#nombre').value.trim();\r\n        if(name === undefined || name === '') {\r\n            ModalManager.getInstance().setModalInfo('Missing input', 'Name can\\'t be empty', false);\r\n            return;\r\n        }\r\n\r\n        let firstChar = name.charAt(0);\r\n        if(firstChar >= 0 && firstChar <= 9) {\r\n            ModalManager.getInstance().setModalInfo('Wrong input', 'The first character of the name can\\'t be a number', false);\r\n            return;\r\n        }\r\n\r\n        let type = document.querySelector('#type').value.trim();\r\n        let initialState = '';\r\n        if(type !== '') {\r\n            if(type.toLowerCase() === 'daily') {\r\n                initialState = 'Ausent';\r\n            } else if(type.toLowerCase() === 'quantities') {\r\n                initialState = 0;\r\n            } else if(type.toLowerCase() === 'dual-state' || type.toLowerCase() === 'triple-state') {\r\n                initialState = 'Pending';\r\n            }\r\n        } else {\r\n            ModalManager.getInstance().setModalInfo('Missing input', 'You must select a list type', false);\r\n            return; \r\n        }\r\n\r\n        let itemInputs = document.querySelectorAll('.new-item input');\r\n        let items = [];\r\n        for(let itemInput of itemInputs) {\r\n            if(itemInput.value !== '') {\r\n                items.push({\r\n                    \"name\": itemInput.value.trim(),\r\n                    \"value\": initialState\r\n                });\r\n            }\r\n        }\r\n\r\n        if(items.length === 0) {\r\n            ModalManager.getInstance().setModalInfo('Missing input', 'Can\\'t create a list with no items', false);\r\n            return;\r\n        }\r\n\r\n        let newList = {\r\n            \"name\": name,\r\n            \"type\": type,\r\n            \"items\": items\r\n        }\r\n\r\n        this.createList(newList);\r\n    }\r\n\r\n    createListFromJSON() {\r\n        let textarea = document.querySelector('textarea#import-json');\r\n        let listAsJSON = textarea.value;\r\n        let newList;\r\n\r\n        try {\r\n            newList = JSON.parse(listAsJSON);\r\n        } catch(error) {\r\n            ModalManager.getInstance().setModalInfo('An unexpected error ocurred', String(error), false);\r\n            return;\r\n        }\r\n\r\n        this.createList(newList);\r\n    }\r\n\r\n    createItemsInputs() {\r\n        const { themesManager } = this.props;\r\n        const { itemInputsAddRate } = this.state;\r\n        let itemInputs = [];\r\n\r\n        for(let i = 1; i < itemInputsAddRate + 1; i++) {\r\n            itemInputs.push(<NewItem key={i} themesManager={themesManager} />);\r\n        }\r\n\r\n        this.setState({itemInputs: itemInputs});\r\n    }\r\n\r\n    addItemInputs() {\r\n        const { themesManager } = this.props;\r\n        let { itemInputs, itemInputsAddRate } = this.state;\r\n        let totalInputs = itemInputs.length;\r\n\r\n        for(let i = 1; i < itemInputsAddRate + 1; i++) {\r\n            itemInputs.push(<NewItem key={totalInputs + i} themesManager={themesManager} />);\r\n        }\r\n\r\n        this.setState({itemInputs: itemInputs});\r\n    }\r\n\r\n    onMouseAction(className, type) {\r\n        const { themesManager } = this.props;\r\n        const currentTheme = themesManager.getCurrentTheme();\r\n\r\n        let div = document.querySelector('.' + className);\r\n        if(type === 'enter') {\r\n            div.style.backgroundColor = currentTheme.textColor;\r\n            div.style.color = currentTheme.mainColor;\r\n        } else {\r\n            div.style.backgroundColor = currentTheme.mainColor;\r\n            div.style.color = currentTheme.textColor;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { themesManager, cancelNewList } = this.props; \r\n        const currentTheme = themesManager.getCurrentTheme();\r\n\r\n        const { itemInputs } = this.state;\r\n\r\n        const style = {\r\n            backgroundColor: currentTheme.mainColor,\r\n            borderColor: currentTheme.borderColor,\r\n            color: currentTheme.textColor\r\n        }\r\n\r\n        const horizontalSeparatorStyle = {\r\n            backgroundColor: currentTheme.borderColor\r\n        }\r\n\r\n        return(\r\n            <div className=\"new-lista\" style={style} >\r\n                <div className=\"new-lista-header\" style={style} >\r\n                    <p>New List</p>\r\n                </div>\r\n                <div className=\"new-lista-form\">\r\n                    <div className=\"label-input\">\r\n                        <div className=\"label\">\r\n                            <label htmlFor=\"nombre\">Name</label>\r\n                        </div>\r\n                        <div className=\"input\">\r\n                            <input type=\"text\" id=\"nombre\" name=\"nombre\" style={style} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"label-input\">\r\n                        <div className=\"label\">\r\n                            <label htmlFor=\"type\">Type</label>\r\n                        </div>\r\n                        <div className=\"input\">\r\n                            <select name=\"type\" id=\"type\" style={style} >\r\n                                <option value=\"\">--- Select Type ---</option>\r\n                                <option value=\"Daily\">Daily (Ausent, Here, Spoke)</option>\r\n                                <option value=\"Dual-State\">Dual state list (Pending, Done)</option>\r\n                                <option value=\"Triple-State\">Triple state list (Pending, Current, Done)</option>\r\n                                <option value=\"Quantities\">Quantities (Item and quantity)</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"label-input\">\r\n                        <div className=\"label\">\r\n                            <p>Items</p>\r\n                        </div>\r\n                        <div className=\"input\">\r\n                            {itemInputs}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"label-input\">\r\n                        <div className=\"label\"></div>\r\n                        <div className=\"input\">\r\n                            <button style={style} className=\"button-add-inputs\" onClick={this.addItemInputs} onMouseEnter={() => this.onMouseAction('button-add-inputs', 'enter')} onMouseLeave={() => this.onMouseAction('button-add-inputs', 'leave')} >(+) Item</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"buttons\">\r\n                        <button type=\"button\" className=\"button-cancel\" style={style} onClick={cancelNewList} onMouseEnter={() => this.onMouseAction('button-cancel', 'enter')} onMouseLeave={() => this.onMouseAction('button-cancel', 'leave')} >Cancel</button>\r\n                        <button type=\"button\" className=\"button-add\" style={style} onClick={this.createListFromForm} onMouseEnter={() => this.onMouseAction('button-add', 'enter')} onMouseLeave={() => this.onMouseAction('button-add', 'leave')} >Add new list</button>\r\n                    </div>\r\n                    <div className=\"horizontalSeparator\" style={horizontalSeparatorStyle} />\r\n                    <div className=\"label-input\">\r\n                        <div className=\"label\">\r\n                            <label htmlFor=\"import-json\">JSON</label>\r\n                        </div>\r\n                        <div className=\"input\">\r\n                            <textarea resizable=\"true\" id=\"import-json\" rows=\"5\" cols=\"40\" style={style} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"buttons\">\r\n                        <button type=\"button\" className=\"button-import\" style={style} onClick={this.createListFromJSON} onMouseEnter={() => this.onMouseAction('button-import', 'enter')} onMouseLeave={() => this.onMouseAction('button-import', 'leave')} >Import from JSON</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React, { Component } from 'react';\r\n\r\n/* Classes */\r\nimport ListsManager from './../../classes/ListsManager';\r\n\r\n/* Components */\r\nimport Items from './../Items/Items';\r\nimport Listas from './../Listas/Listas'; \r\nimport NewLista from './../NewLista/NewLista';\r\n\r\n/* Stylesheets */\r\nimport './Main.css';\r\n\r\nexport default class Main extends Component {\r\n\r\n    constructor(props) {\r\n        super(props); \r\n\r\n        this.state = {\r\n            listsManager: new ListsManager(),\r\n            showNewListComponent: false,\r\n            stateUpdates: 0,\r\n        }\r\n    \r\n        this.stateUpdater = this.stateUpdater.bind(this);\r\n        this.newList = this.newList.bind(this);\r\n        this.cancelNewList = this.cancelNewList.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { listsManager } = this.state;\r\n        listsManager.setStateUpdater(this.stateUpdater);\r\n        this.setState({listsManager : listsManager});\r\n    }\r\n\r\n    stateUpdater() {\r\n        this.setState((state) => ({\r\n            showNewListComponent: false,\r\n            stateUpdates: state.stateUpdates + 1\r\n        }));\r\n    }\r\n\r\n    newList() {\r\n        const { listsManager } = this.state; \r\n        listsManager.saveCurrentList();\r\n        this.setState({showNewListComponent: true});\r\n    }\r\n      \r\n    cancelNewList() {\r\n        this.setState({showNewListComponent: false});\r\n    }\r\n\r\n    render() {\r\n        const { themesManager } = this.props;\r\n        \r\n        const { listsManager, showNewListComponent } = this.state;\r\n\r\n        let currentList = {};\r\n        if(listsManager.getCurrentListIndex() !== -1) {\r\n            currentList = listsManager.getCurrentList();\r\n        }\r\n\r\n        return(\r\n            <div className=\"main\" >\r\n                <Listas \r\n                    newList={this.newList}\r\n                    listsManager={listsManager}\r\n                    themesManager={themesManager}\r\n                />\r\n                {\r\n                    !showNewListComponent ? \r\n                        (currentList.name !== undefined ?\r\n                            <Items \r\n                                listsManager={listsManager} \r\n                                themesManager={themesManager} \r\n                            /> \r\n                            : \r\n                            '') \r\n                        :\r\n                        <NewLista \r\n                            cancelNewList={this.cancelNewList} \r\n                            listsManager={listsManager}\r\n                            themesManager={themesManager}\r\n                        /> \r\n                }\r\n          </div>\r\n        );\r\n    }\r\n\r\n}","import React, { Component } from 'react';\r\n\r\n/* Stylesheets */\r\nimport './Footer.css';\r\n\r\nexport default class Footer extends Component {\r\n\r\n    render() {\r\n        const { themesManager } = this.props;\r\n        const currentTheme = themesManager.getCurrentTheme();\r\n\r\n        const style = {\r\n            backgroundColor: currentTheme.mainColor,\r\n            borderColor: currentTheme.borderColor,\r\n            color: currentTheme.textColor\r\n        }\r\n\r\n        return(\r\n            <div className=\"footer\" style={style}>\r\n                <div className=\"bug-report\">\r\n                    <a style={style} href=\"mailto:list.helper.bug.report@gmail.com\">Report bug</a>\r\n                </div>\r\n                <div className=\"contact\">\r\n                    <a style={style} href=\"mailto:list.helper.dev.contact@gmail.com\">Contact/Suggestions</a>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n}","import React, { Component } from 'react';\r\n\r\n/* Classes */\r\nimport ModalManager from './../../classes/ModalManager';\r\n\r\n/* Stylesheets */\r\nimport './Modal.css';\r\n\r\nexport default class Modal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            modalManager: ModalManager.getInstance(),\r\n            title: '',\r\n            message: '',\r\n            show: false,\r\n            hasAccept: false,\r\n        }\r\n\r\n        this.renderModal = this.renderModal.bind(this);\r\n        this.cancel = this.cancel.bind(this);\r\n        this.accept = this.accept.bind(this);\r\n        this.onMouseAction = this.onMouseAction.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { modalManager } = this.state;\r\n        modalManager.setModalRenderer(this.renderModal);\r\n        this.setState({modalManager: modalManager});\r\n    }\r\n\r\n    renderModal() {\r\n        const { modalManager } = this.state;\r\n        this.setState({\r\n            title: modalManager.getTitle(),\r\n            message: modalManager.getMessage(),\r\n            show: true,\r\n            hasAccept: modalManager.hasAccept()\r\n        });\r\n    }   \r\n\r\n    cancel() {\r\n        const { modalManager } = this.state;\r\n        modalManager.accept(false);\r\n        this.setState({show : false});\r\n    }\r\n\r\n    accept() {\r\n        const { modalManager } = this.state;\r\n        modalManager.accept(true);\r\n        this.setState({show : false});\r\n    }\r\n\r\n    onMouseAction(className, type) {\r\n        const { themesManager } = this.props;\r\n        const currentTheme = themesManager.getCurrentTheme();\r\n\r\n        let div = document.querySelector('.' + className);\r\n        if(type === 'enter') {\r\n            div.style.backgroundColor = currentTheme.textColor;\r\n            div.style.color = currentTheme.mainColor;\r\n        } else {\r\n            div.style.backgroundColor = currentTheme.mainColor;\r\n            div.style.color = currentTheme.textColor;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { themesManager } = this.props;\r\n        const currentTheme = themesManager.getCurrentTheme();\r\n        \r\n        const { title, message, show, hasAccept } = this.state;  \r\n\r\n        const style = {\r\n            backgroundColor: currentTheme.mainColor,\r\n            borderColor: currentTheme.borderColor,\r\n            color: currentTheme.textColor\r\n        }\r\n\r\n        if(show) {\r\n            return (\r\n                <div className=\"modal\">\r\n                    <div className=\"modal-inner\" style={style} >\r\n                        <div className=\"modal-header\" style={style} >\r\n                            <h2>{title}</h2>\r\n                        </div>\r\n                        <div className=\"modal-body\" style={style} >\r\n                            <p>{message}</p>\r\n                        </div>\r\n                        <div className=\"modal-footer\" style={style} >\r\n                            <div className=\"modal-close\" style={style} onClick={this.cancel} onMouseEnter={() => this.onMouseAction('modal-close', 'enter')} onMouseLeave={() => this.onMouseAction('modal-close', 'leave')}>\r\n                                { hasAccept ? 'Cancel' : 'Close' }\r\n                            </div>\r\n                            { hasAccept ? \r\n                                <div className=\"modal-accept\" style={style} onClick={this.accept} onMouseEnter={() => this.onMouseAction('modal-accept', 'enter')} onMouseLeave={() => this.onMouseAction('modal-accept', 'leave')}>\r\n                                    Accept\r\n                                </div>\r\n                             : '' \r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n}","import React, { Component } from 'react';\r\n\r\n/* Stylesheets */\r\nimport './ErrorDisplay.css';\r\n\r\nexport default class ErrorDisplay extends Component {\r\n\r\n    render() {\r\n        const { themesManager, cookiesNotAccepted } = this.props;\r\n        const currentTheme = themesManager.getCurrentTheme();\r\n\r\n        const style = {\r\n            backgroundColor: currentTheme.mainColor,\r\n            borderColor: currentTheme.borderColor,\r\n            color: currentTheme.textColor\r\n        }\r\n\r\n        let pFontSize;\r\n        if(cookiesNotAccepted) {\r\n            pFontSize = {\r\n                fontSize: '100px'\r\n            } \r\n        } else {\r\n            pFontSize = {\r\n                fontSize: '40px'\r\n            } \r\n        }\r\n\r\n        return (\r\n            <div className=\"cookies-not-accepted\" style={style} >\r\n                <p>Oops!</p>\r\n                <p>¯\\_(ツ)_/¯</p>\r\n                <p style={pFontSize} >\r\n                    { cookiesNotAccepted ? \r\n                    'You did not accept the use of cookies' :\r\n                    'Sorry, we don\\'t have support for this screen resolution yet. Try on a device with a width resolution equal or greater than 920px' }\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React, { Component } from 'react';\r\n\r\n/* Classes */\r\nimport ThemesManager from './classes/ThemesManager';\r\nimport ModalManager from './classes/ModalManager';\r\n\r\n/* Components */\r\nimport Header from './components/Header/Header';\r\nimport Main from './components/Main/Main';\r\nimport Footer from './components/Footer/Footer';\r\nimport Modal from './components/Modal/Modal';\r\nimport ErrorDisplay from './components/ErrorDisplay/ErrorDisplay';\r\n\r\n/* Stylesheets */\r\nimport './App.css';\r\n\r\nexport default class App extends Component {\r\n\r\n    constructor(props) {\r\n        super(props); \r\n\r\n        this.state = {\r\n            themesManager: new ThemesManager(),\r\n            stateUpdates: 0,\r\n            cookiesAccepted: true,\r\n        }\r\n\r\n        this.setTheme = this.setTheme.bind(this);\r\n        this.acceptCookies = this.acceptCookies.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        ModalManager.getInstance().setModalInfo(\r\n            'Hold it right there', \r\n            'This site only uses cookies to store data. Do you accept cookies into your heart?',\r\n            true,\r\n            () => {\r\n                this.acceptCookies(true);\r\n            },\r\n            () => {\r\n                this.acceptCookies(false);\r\n            },\r\n        );\r\n    }\r\n\r\n    acceptCookies(cookiesAccepted) {\r\n        this.setState({cookiesAccepted: cookiesAccepted});\r\n    }\r\n\r\n    setTheme(themeIndex, customTheme) {\r\n        let { themesManager } = this.state;\r\n\r\n        if(themeIndex === 2) {\r\n            themesManager.setCustomTheme(customTheme);\r\n        }\r\n\r\n        themesManager.setCurrentTheme(themeIndex);\r\n        this.setState((state) => ({\r\n            stateUpdates: state.stateUpdates + 1\r\n        }));\r\n    }\r\n\r\n    render() {\r\n        const { cookiesAccepted, themesManager } = this.state;\r\n        const currentTheme = themesManager.getCurrentTheme();\r\n\r\n        const style = {\r\n            backgroundColor: currentTheme.secondaryColor\r\n        }\r\n/*\r\n        if(window.screen.width < 720 || window.innerWidth < 720) {\r\n            console.log('window screen width: ' + window.screen.width);\r\n            console.log('window innerWidth: ' + window.innerWidth);\r\n            return (\r\n                <div className=\"app\" style={style}>\r\n                    <h1>Sorry, we don't have support for this screen resolution yet. Try on a device with a width resolution greater than 720px.</h1>\r\n                </div>\r\n            );\r\n        }\r\n*/\r\n        let noSupportForCurrentResolution = window.screen.width < 920;\r\n\r\n        if(!cookiesAccepted || noSupportForCurrentResolution) {\r\n            return (\r\n                <div className=\"app\" style={style}>\r\n                    <ErrorDisplay themesManager={themesManager} cookiesNotAccepted={!cookiesAccepted} />\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div className=\"app\" style={style}>\r\n                    <Header setTheme={this.setTheme} themesManager={themesManager} />\r\n                    <Main themesManager={themesManager} />\r\n                    <Footer themesManager={themesManager} />\r\n                    <Modal themesManager={themesManager} />\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}