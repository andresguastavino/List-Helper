{"version":3,"sources":["components/Header/Header.js","components/Item/Item.js","components/Items/Items.js","components/Lista/Lista.js","components/Listas/Listas.js","components/NewItem/NewItem.js","components/NewLista/NewLista.js","components/Main/Main.js","components/Footer/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","state","showCustomThemeModal","theme","mainColor","secondaryColor","borderColor","textColor","changeTheme","bind","changeColor","onMouseEnter","onMouseLeave","customMainColor","customSecondaryColor","customBorderColor","customTextColor","cookies","document","cookie","split","nombreLista","trim","items","undefined","parseInt","this","setState","themeProps","setTheme","querySelectorAll","input","value","checked","colorInputs","querySelector","style","backgroundColor","className","div","color","intputColorBorder","headerStyle","verticalSeparatorStyle","applyButtonStyle","type","name","id","onClick","htmlFor","onChange","Component","Item","states","colors","currentState","quantity","changeState","increase","setStatesAndColors","toLowerCase","length","updateItemValue","increment","itemStyle","itemNombreStyle","increaseStyle","itemInfoStyle","unselectable","Items","getItems","exportAsJson","onMouseAction","onEditItems","list","item","push","key","console","log","listItem","listAsJSON","JSON","stringify","textArea","createElement","body","append","select","execCommand","removeChild","alert","itemsStyle","itemsHeaderStyle","editItemsButtonStyle","exportJSONButtonStyle","Lista","deleteList","buildClassName","onClickList","index","isCalledFromRender","listName","replace","indexOf","listaStyle","buttonStyle","Listas","listLists","lists","newListDiv","listasStyle","listasHeaderStyle","nuevaListaStyle","newList","NewItem","NewLista","itemInputsAddRate","itemInputs","createLista","createItemsInputs","addItemInput","importFromJSON","overrideExistingList","firstChar","charAt","initialState","itemInput","override","createList","window","confirm","i","totalInputs","parse","error","String","cancelNewList","newListaStyle","newListaHeaderStyle","horizontalSeparatorStyle","resizable","rows","cols","Main","currentList","showNewListComponent","setLists","updateCookies","listInfo","shift","listItems","Date","getFullYear","itemName","newValue","listType","listIndex","splice","Footer","footerStyle","aStyle","href","App","appStyle","screen","width","innerWidth","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.dc1b6e26.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Header.css';\r\n\r\nexport default class Header extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showCustomThemeModal: false,\r\n            theme: 0,\r\n            mainColor: '#000',\r\n            secondaryColor: '#000',\r\n            borderColor: '#000',\r\n            textColor: '#000'\r\n        }\r\n\r\n        this.changeTheme = this.changeTheme.bind(this);\r\n        this.changeColor = this.changeColor.bind(this);\r\n        this.onMouseEnter = this.onMouseEnter.bind(this);\r\n        this.onMouseLeave = this.onMouseLeave.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        let theme, mainColor, secondaryColor, borderColor, textColor;\r\n        let customMainColor, customSecondaryColor, customBorderColor, customTextColor;\r\n        let cookies = document.cookie;\r\n        if(cookies !== '') {\r\n            for(let cookie of cookies.split(';')) {\r\n                let nombreLista = cookie.split('=')[0].trim();\r\n                let items = cookie.split('=')[1].split(',');\r\n                if(nombreLista === 'themeProps') {\r\n                    theme = items[0];\r\n                    mainColor = items[1];\r\n                    secondaryColor = items[2];\r\n                    borderColor = items[3];\r\n                    textColor = items[4];   \r\n                } else if(nombreLista === 'customThemeProps') {\r\n                    customMainColor = items[0];\r\n                    customSecondaryColor = items[1];\r\n                    customBorderColor = items[2];\r\n                    customTextColor = items[3];\r\n                }\r\n            }\r\n        } \r\n\r\n        let showCustomThemeModal = false;\r\n        if(theme === undefined) {\r\n            theme = 0;\r\n        } else if(parseInt(theme) === 2) {\r\n            showCustomThemeModal = true;\r\n        }\r\n\r\n        this.setState({\r\n            showCustomThemeModal\r\n        });\r\n\r\n        this.setState({\r\n            theme: theme,\r\n            showCustomThemeModal: showCustomThemeModal,\r\n            mainColor: customMainColor !== undefined ? customMainColor : '#000',\r\n            secondaryColor: customSecondaryColor !== undefined ? customSecondaryColor: '#000',\r\n            borderColor: customBorderColor !== undefined ? customBorderColor : '#fff',\r\n            textColor: customTextColor !== undefined ? customTextColor : '#fff'\r\n        });\r\n\r\n        let themeProps = {\r\n            theme: theme,\r\n            mainColor: mainColor,\r\n            secondaryColor: secondaryColor,\r\n            borderColor: borderColor,\r\n            textColor: textColor\r\n        }\r\n\r\n        this.props.setTheme(themeProps);\r\n\r\n        for(let input of document.querySelectorAll('input[type=\"radio\"]')) {\r\n            if(input.value === theme) {\r\n                input.checked = true;\r\n            }\r\n        }\r\n    }\r\n   \r\n    changeTheme(theme) {\r\n        let themeProps = {};\r\n        let showCustomThemeModal = true;\r\n\r\n        if(theme === 0) {\r\n            themeProps = {\r\n                theme: theme,\r\n                mainColor: '#fff',\r\n                secondaryColor: '#fff',\r\n                borderColor: '#000',\r\n                textColor: '#000',\r\n            }\r\n            showCustomThemeModal = false;\r\n        } else if(theme === 1) {\r\n            themeProps = {\r\n                theme: theme,\r\n                mainColor: '#000',\r\n                secondaryColor: '#201e25',\r\n                borderColor: '#383434',\r\n                textColor: '#fff',\r\n            }\r\n            showCustomThemeModal = false;\r\n        } else {\r\n            let colorInputs = document.querySelectorAll('input[type=\"color\"]');\r\n            themeProps = {\r\n                theme: theme,\r\n                mainColor: colorInputs[0].value,\r\n                secondaryColor: colorInputs[1].value,\r\n                borderColor: colorInputs[2].value,\r\n                textColor: colorInputs[3].value,\r\n            }\r\n        }\r\n\r\n        this.props.setTheme(themeProps);\r\n        this.setState({\r\n            themeProps,\r\n            showCustomThemeModal\r\n        });\r\n    }\r\n\r\n    changeColor(input) {\r\n        let value = document.querySelector('#' + input).value;\r\n        let span = document.querySelector('#sp-' + input);\r\n        span.style.backgroundColor = value;\r\n        switch(input) {\r\n            case 'main-color':\r\n                this.setState({mainColor: value});\r\n                break;\r\n            case 'secondary-color':\r\n                this.setState({secondaryColor: value});\r\n                break;\r\n            case 'border-color':\r\n                this.setState({borderColor: value});\r\n                break;\r\n            default:\r\n                this.setState({textColor: value});\r\n                break;\r\n        }\r\n    }\r\n\r\n    onMouseEnter(className) {\r\n        let themeProps = this.props.themeProps;\r\n        let div = document.querySelector('.' + className);\r\n        div.style.backgroundColor = themeProps.textColor;\r\n        div.style.color = themeProps.mainColor;\r\n    }\r\n\r\n    onMouseLeave(className) {\r\n        let themeProps = this.props.themeProps;\r\n        let div = document.querySelector('.' + className);\r\n        div.style.backgroundColor = themeProps.mainColor;\r\n        div.style.color = themeProps.textColor;\r\n    }\r\n\r\n    render() {   \r\n        const { themeProps } = this.props;\r\n        const { mainColor, secondaryColor, borderColor, textColor, showCustomThemeModal } = this.state; \r\n        let intputColorBorder = themeProps.borderColor;\r\n\r\n        const headerStyle = {\r\n            backgroundColor: themeProps.mainColor,\r\n            borderColor: themeProps.borderColor,\r\n            color: themeProps.textColor\r\n        }\r\n\r\n        const verticalSeparatorStyle = {\r\n            backgroundColor: themeProps.borderColor\r\n        }\r\n\r\n        const applyButtonStyle = {\r\n            backgroundColor: themeProps.mainColor,\r\n            borderColor: themeProps.borderColor,\r\n            color: themeProps.textColor\r\n        }\r\n\r\n        return(\r\n            <div className=\"header\" style={headerStyle} >\r\n                <div className=\"text-holder\">\r\n                    <h1>List Helper</h1>\r\n                </div>\r\n                <div className=\"vertical-separator\" style={verticalSeparatorStyle} />\r\n                <div className=\"vertical-separator\" style={verticalSeparatorStyle} />\r\n                <div className=\"theme-group-holder\">\r\n                    <div className=\"input-group-title\">\r\n                        <p>Theme</p>\r\n                    </div>\r\n                    <div className=\"input-group\">\r\n                        <input type=\"radio\" name=\"theme\" id=\"light\" value=\"0\" onClick={() => this.changeTheme(0)}/>\r\n                        <label htmlFor=\"light\">Light</label>\r\n                    </div>\r\n                    <div className=\"input-group\">\r\n                        <input type=\"radio\" name=\"theme\" id=\"dark\" value=\"1\" onClick={() => this.changeTheme(1)}/>\r\n                        <label htmlFor=\"dark\">Dark</label>\r\n                    </div>\r\n                    <div className=\"input-group\">\r\n                        <input type=\"radio\" name=\"theme\" id=\"custom\" value=\"2\" onClick={() => this.setState({showCustomThemeModal: true})}/>\r\n                        <label htmlFor=\"custom\">Custom</label>\r\n                    </div>\r\n                </div>\r\n                { showCustomThemeModal ? <div className=\"vertical-separator\" style={verticalSeparatorStyle} /> : '' }\r\n                { showCustomThemeModal ? <div className=\"vertical-separator\" style={verticalSeparatorStyle} /> : '' }\r\n                { showCustomThemeModal ?\r\n                    <div className=\"custom-theme-modal\">\r\n                        <div className=\"color-input-group\">\r\n                            <label htmlFor=\"main-color\">\r\n                                <span className=\"color-input\" id=\"sp-main-color\" style={{backgroundColor: mainColor, borderColor: intputColorBorder}} />\r\n                            </label>\r\n                            <input type=\"color\" id=\"main-color\" value={mainColor} onChange={() => this.changeColor('main-color')} />\r\n                            <label htmlFor=\"main-color\">Main</label>\r\n                        </div>\r\n                        <div className=\"color-input-group\">\r\n                            <label htmlFor=\"secondary-color\">\r\n                                <span className=\"color-input\" id=\"sp-secondary-color\" style={{backgroundColor: secondaryColor, borderColor: intputColorBorder}} />\r\n                            </label>\r\n                            <input type=\"color\" id=\"secondary-color\" value={secondaryColor} onChange={() => this.changeColor('secondary-color')} />\r\n                            <label htmlFor=\"secondary-color\">Secondary</label>\r\n                        </div>\r\n                        <div className=\"color-input-group\">\r\n                            <label htmlFor=\"border-color\">\r\n                                <span className=\"color-input\" id=\"sp-border-color\" style={{backgroundColor: borderColor, borderColor: intputColorBorder}} />\r\n                            </label>\r\n                            <input type=\"color\" id=\"border-color\" value={borderColor} onChange={() => this.changeColor('border-color')} />\r\n                            <label htmlFor=\"border-color\">Border</label>\r\n                        </div>\r\n                        <div className=\"color-input-group\">\r\n                            <label htmlFor=\"text-color\">\r\n                                <span className=\"color-input\" id=\"sp-text-color\" style={{backgroundColor: textColor, borderColor: intputColorBorder}} />\r\n                            </label>\r\n                            <input type=\"color\" id=\"text-color\" value={textColor} onChange={() => this.changeColor('text-color')} />\r\n                            <label htmlFor=\"text-color\">Text</label>\r\n                        </div>\r\n                        <div className=\"color-input-group\">\r\n                            <button type=\"button\" className=\"apply-button\" style={applyButtonStyle} onClick={() => this.changeTheme(2)} onMouseEnter={() => this.onMouseEnter('apply-button')} onMouseLeave={() => this.onMouseLeave('apply-button')} >Apply</button>\r\n                        </div>\r\n                    </div> : ''\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './Item.css';\r\n\r\nexport default class Item extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            states: [],\r\n            colors: [],\r\n            currentState: 0,\r\n            quantity: 0,\r\n        }\r\n\r\n        this.changeState = this.changeState.bind(this);\r\n        this.increase = this.increase.bind(this);\r\n        this.setStatesAndColors = this.setStatesAndColors.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setStatesAndColors();\r\n    }\r\n\r\n    setStatesAndColors() {\r\n        let { type, value } = this.props;\r\n        let states = [];\r\n        let colors = [];\r\n        let currentState = 0;\r\n        let quantity = 0;\r\n\r\n        switch(type.toLowerCase()) {\r\n            case 'daily':\r\n                states = ['Ausent', 'Here', 'Spoke'];\r\n                colors = ['#a43333', '#201e25', '#33b033'];\r\n                break;\r\n            case 'dual-state':\r\n                states = ['Pending', 'Done'];\r\n                colors = ['#201e25', '#33b033'];\r\n                break;\r\n            case 'triple-state':\r\n                states = ['Pending', 'In progress', 'Done'];\r\n                colors = ['#201e25', '#29477a', '#33b033'];\r\n                break;\r\n            default:\r\n                colors = ['#d4942a'];\r\n                break;\r\n        }\r\n        \r\n        if(type.toLowerCase() === 'daily') {\r\n            switch(value) {\r\n                case 'Ausent':\r\n                    currentState = 0;\r\n                    break;\r\n                case 'Here':\r\n                    currentState = 1;\r\n                    break;\r\n                case 'Spoke':\r\n                    currentState = 2;\r\n                    break;\r\n                default:\r\n                    currentState = -1;\r\n                    break;\r\n            }\r\n        } else if(type.toLowerCase() === 'dual-state' || type.toLowerCase() === 'triple-state') {\r\n            switch(value) {\r\n                case 'Pending':\r\n                    currentState = 0;\r\n                    break;\r\n                case 'In progress':\r\n                    currentState = 1;\r\n                    break;\r\n                case 'Done':\r\n                    currentState = type.toLowerCase() === 'dual-state' ? 1 : 2;\r\n                    break;\r\n                default:\r\n                    currentState = -1;\r\n                    break;\r\n            }\r\n        } else {\r\n            quantity = value;\r\n        }\r\n\r\n        this.setState({\r\n            states,\r\n            colors,\r\n            currentState,\r\n            quantity\r\n        });\r\n    }\r\n\r\n    changeState() {\r\n        let { states, currentState } = this.state;\r\n        let { name, type } = this.props;\r\n        currentState = currentState + 1 >= states.length ? 0 : currentState + 1;\r\n        this.setState({currentState: currentState});\r\n        this.props.updateItemValue(name, states[currentState], type);\r\n    }\r\n\r\n    increase(increment) {\r\n        let { quantity } = this.state;\r\n        let { name, type } = this.props;\r\n        this.setState({quantity: quantity + increment});\r\n        this.props.updateItemValue(name, quantity, type);\r\n    }\r\n\r\n    render() {\r\n        const { name, type, themeProps } = this.props;\r\n        const { states, colors, currentState, quantity } = this.state;\r\n\r\n        const itemStyle = {\r\n            borderColor: themeProps.borderColor,\r\n            backgroundColor: colors[currentState]\r\n        }\r\n\r\n        const itemNombreStyle = {\r\n            borderColor: themeProps.borderColor\r\n        }\r\n\r\n        const increaseStyle = {\r\n            borderColor: themeProps.borderColor\r\n        }\r\n\r\n        const itemInfoStyle = {\r\n            borderColor: themeProps.borderColor\r\n        }\r\n\r\n        if(type.toLowerCase() !== 'quantities') {\r\n            return(\r\n                <div className=\"item\" style={itemStyle} onClick={this.changeState} >\r\n                    <div className=\"item-nombre\" style={itemNombreStyle}>\r\n                        <p unselectable=\"on\">{name}</p>\r\n                    </div>\r\n                    <div className=\"item-state\">\r\n                        <p unselectable=\"on\">\r\n                            { states[currentState] }\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else {\r\n            return(\r\n                <div className=\"item-quantity\" style={itemStyle} >\r\n                    <div className=\"decrease\" style={increaseStyle} onClick={() => this.increase(-100)}>{'<<<'}</div>\r\n                    <div className=\"decrease middle-decrease\" style={increaseStyle} onClick={() => this.increase(-10)}>{'<<'}</div>\r\n                    <div className=\"decrease\" style={increaseStyle} onClick={() => this.increase(-1)}>{'<'}</div>\r\n                    <div className=\"item-info\" style={itemInfoStyle}>\r\n                        <div className=\"item-nombre\" style={itemNombreStyle}>\r\n                            <p unselectable=\"on\">{quantity}</p>\r\n                        </div>\r\n                        <div className=\"item-state\">\r\n                            <p unselectable=\"on\">\r\n                                {name}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"increase\" style={increaseStyle} onClick={() => this.increase(1)}>{'>'}</div>\r\n                    <div className=\"increase middle-increase\" style={increaseStyle} onClick={() => this.increase(10)}>{'>>'}</div>\r\n                    <div className=\"increase\" style={increaseStyle} onClick={() => this.increase(100)}>{'>>>'}</div> \r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Item from './../Item/Item';\r\nimport './Items.css'\r\n\r\nexport default class Items extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.getItems = this.getItems.bind(this);\r\n        this.exportAsJson = this.exportAsJson.bind(this);\r\n        this.onMouseAction = this.onMouseAction.bind(this);\r\n        this.onEditItems = this.onEditItems.bind(this);\r\n    }\r\n\r\n    getItems() {\r\n        let list = this.props.list;\r\n        let themeProps = this.props.themeProps;\r\n        let updateItemValue = this.props.updateItemValue;\r\n\r\n        if(list !== undefined && list.items !== undefined) {\r\n            let items = [];\r\n\r\n            for(let item of list.items) {\r\n                items.push(<Item key={item.key} name={item.name} value={item.value} type={list.type} themeProps={themeProps} updateItemValue={updateItemValue} />);\r\n            }\r\n    \r\n            return items;\r\n        }\r\n    }\r\n\r\n    exportAsJson() {\r\n        let { list } = this.props;\r\n        console.log(list);\r\n        let items = [];\r\n        for(let listItem of list.items) {\r\n            let { name, value } = listItem;\r\n            let item = {\r\n                \"name\": name,\r\n                \"value\": value\r\n            };\r\n            items.push(item);\r\n        }\r\n        list.items = items;\r\n        let listAsJSON = JSON.stringify(list);\r\n        let textArea = document.createElement('textarea');\r\n        textArea.value = listAsJSON;\r\n        document.body.append(textArea);\r\n        textArea.select();\r\n        document.execCommand('copy');\r\n        document.body.removeChild(textArea);\r\n        alert('List coppied to clipboard as JSON');\r\n    }\r\n\r\n    onMouseAction(type, className) {\r\n        let { themeProps } = this.props;\r\n        let div = document.querySelector('.' + className);\r\n        if(type === 'enter') {\r\n            div.style.backgroundColor = themeProps.textColor;\r\n            div.style.color = themeProps.mainColor;\r\n        } else {\r\n            div.style.backgroundColor = themeProps.mainColor;\r\n            div.style.color = themeProps.textColor;\r\n        }\r\n    }\r\n\r\n    onEditItems() {\r\n        alert('feature not ready yet!');\r\n    }\r\n\r\n    render() {\r\n        const { themeProps, list } = this.props;\r\n\r\n        const itemsStyle = {\r\n            backgroundColor: themeProps.mainColor,\r\n            borderColor: themeProps.borderColor,\r\n            color: themeProps.textColor\r\n        }\r\n\r\n        const itemsHeaderStyle = {\r\n            borderColor: themeProps.borderColor,\r\n            color: themeProps.textColor\r\n        }\r\n\r\n        const editItemsButtonStyle = {\r\n            backgroundColor: themeProps.mainColor,\r\n            borderColor: themeProps.borderColor,\r\n            color: themeProps.textColor\r\n        }\r\n\r\n        const exportJSONButtonStyle = {\r\n            backgroundColor: themeProps.mainColor,\r\n            borderColor: themeProps.borderColor,\r\n            color: themeProps.textColor\r\n        }\r\n\r\n\r\n        return(\r\n            <div className=\"items\" style={itemsStyle}>\r\n                <div className=\"items-header\" style={itemsHeaderStyle}>\r\n                    <div className=\"items-title\">\r\n                        <p>{list.name + ' > Items / ' + list.type}</p>\r\n                    </div>\r\n                    <div className=\"items-buttons\">\r\n                        <div className=\"edit-items-button\" style={editItemsButtonStyle} onClick={this.onEditItems} onMouseEnter={() => this.onMouseAction('enter', 'edit-items-button')} onMouseLeave={() => this.onMouseAction('leave', 'edit-items-button')} >\r\n                            <p>Edit list items</p>\r\n                        </div>\r\n                        <div className=\"export-json-button\" style={exportJSONButtonStyle} onClick={this.exportAsJson} onMouseEnter={() => this.onMouseAction('enter', 'export-json-button')} onMouseLeave={() => this.onMouseAction('leave', 'export-json-button')} >\r\n                            <p>Export list as JSON</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"items-list\">\r\n                    {this.getItems()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './Lista.css';\r\n\r\nexport default class Lista extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.deleteList = this.deleteList.bind(this);\r\n        this.onClick = this.onClick.bind(this);\r\n        this.onMouseAction = this.onMouseAction.bind(this);\r\n        this.buildClassName = this.buildClassName.bind(this);\r\n    }\r\n\r\n    onClick() {\r\n        this.props.onClickList(this.props.name);\r\n    }\r\n\r\n    deleteList() {\r\n        this.props.deleteList(this.props.name);\r\n    }\r\n\r\n    onMouseAction(type, index) {\r\n        let className = this.buildClassName(false);\r\n        let themeProps = this.props.themeProps;\r\n        let div = document.querySelectorAll(className)[index];\r\n\r\n        if(type === 'enter') {\r\n            div.style.backgroundColor = themeProps.textColor;\r\n            div.style.color = themeProps.mainColor;\r\n        } else {\r\n            div.style.backgroundColor = themeProps.mainColor;\r\n            div.style.color = themeProps.textColor;\r\n        }\r\n    }\r\n\r\n    buildClassName(isCalledFromRender) {\r\n        let listName = this.props.name;\r\n        let className;\r\n        if(isCalledFromRender) {\r\n            className = listName.replace(' ', '');\r\n        } else {\r\n            className = '.' + listName.replace(' ', '');\r\n        }\r\n        while(className.indexOf(' ') !== -1) {\r\n            className = className.replace(' ', '');\r\n        }\r\n        return className.toLowerCase();\r\n    }\r\n\r\n    render() {\r\n        const { themeProps, name } = this.props;\r\n\r\n        const listaStyle = {\r\n            backgroundColor: themeProps.mainColor,\r\n            borderColor: themeProps.borderColor,\r\n            color: themeProps.textColor\r\n        }\r\n        \r\n        const buttonStyle = {\r\n            backgroundColor: themeProps.mainColor,\r\n            borderColor: themeProps.borderColor,\r\n            color: themeProps.textColor\r\n        }\r\n\r\n        let className = this.buildClassName(true);\r\n\r\n        return(\r\n            <div className=\"lista\" style={listaStyle}>\r\n                <div className={\"button \" + className} \r\n                    style={buttonStyle} \r\n                    onClick={this.onClick}\r\n                    onMouseEnter={() => this.onMouseAction('enter', 0)}\r\n                    onMouseLeave={() => this.onMouseAction('leave', 0)}\r\n                >\r\n                    <p unselectable=\"on\">{name}</p>\r\n                </div>\r\n                <div className={\"button \" + className} \r\n                    style={buttonStyle} \r\n                    onClick={this.deleteList}\r\n                    onMouseEnter={() => this.onMouseAction('enter', 1)}\r\n                    onMouseLeave={() => this.onMouseAction('leave', 1)}\r\n                >\r\n                    <p>(-)</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React, { Component } from 'react';\r\nimport Lista from './../Lista/Lista';\r\nimport './Listas.css';\r\n\r\nexport default class Listas extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.listLists = this.listLists.bind(this);\r\n        this.onMouseEnter = this.onMouseEnter.bind(this);\r\n        this.onMouseLeave = this.onMouseLeave.bind(this);\r\n    }\r\n\r\n    listLists() {\r\n        let lists = [];\r\n\r\n        if(this.props.lists.length !== 0) {\r\n            for(let list of this.props.lists) {\r\n                lists.push(\r\n                    <Lista key={list.name} \r\n                        name={list.name} \r\n                        onClickList={this.props.onClickList} \r\n                        deleteList={this.props.deleteList} \r\n                        themeProps={this.props.themeProps} \r\n                    />\r\n                );\r\n            }\r\n        }\r\n\r\n        if(lists.length !== 0) {\r\n            return lists;\r\n        } else {\r\n            return (\r\n                <div className=\"no-lists\">\r\n                    <p>There are no lists to show</p>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    onMouseEnter() {\r\n        let newListDiv = document.querySelector('.nueva-lista');\r\n        const themeProps = this.props.themeProps;\r\n        newListDiv.style.backgroundColor = themeProps.textColor;\r\n        newListDiv.style.color = themeProps.mainColor;\r\n    }\r\n\r\n    onMouseLeave() {\r\n        let newListDiv = document.querySelector('.nueva-lista');\r\n        const themeProps = this.props.themeProps;\r\n        newListDiv.style.backgroundColor = themeProps.mainColor;\r\n        newListDiv.style.color = themeProps.textColor;\r\n    }\r\n\r\n    render() {\r\n        const { themeProps } = this.props;\r\n\r\n        const listasStyle = {\r\n            backgroundColor: themeProps.mainColor,\r\n            borderColor: themeProps.borderColor,\r\n            color: themeProps.textColor\r\n        }\r\n\r\n        const listasHeaderStyle = {\r\n            borderColor: themeProps.borderColor,\r\n            color: themeProps.textColor\r\n        }\r\n\r\n        const nuevaListaStyle = {\r\n            backgroundColor: themeProps.mainColor,\r\n            borderColor: themeProps.borderColor,\r\n            color: themeProps.textColor\r\n        }\r\n\r\n        return(\r\n            <div className=\"listas\" style={listasStyle}>\r\n                <div className=\"listas-header\" style={listasHeaderStyle}>\r\n                    <p>Lists</p>\r\n                </div>\r\n                <div className=\"listado-listas\">\r\n                    {this.listLists()}\r\n                </div>\r\n                <div className=\"nueva-lista\" \r\n                    style={nuevaListaStyle} \r\n                    onClick={this.props.newList}\r\n                    onMouseEnter={this.onMouseEnter}\r\n                    onMouseLeave={this.onMouseLeave}\r\n                >\r\n                    <p>(+) New List</p>\r\n                </div>  \r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class NewItem extends Component {\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"new-item\">\r\n                <input type=\"text\" />\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport NewItem from './../NewItem/NewItem';\r\nimport './NewLista.css';\r\n\r\nexport default class NewLista extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            itemInputsAddRate: 5,\r\n            itemInputs: [],\r\n        }\r\n\r\n        this.createLista = this.createLista.bind(this);\r\n        this.createItemsInputs = this.createItemsInputs.bind(this);\r\n        this.addItemInput = this.addItemInput.bind(this);\r\n        this.onMouseEnter = this.onMouseEnter.bind(this);\r\n        this.onMouseLeave = this.onMouseLeave.bind(this);\r\n        this.importFromJSON = this.importFromJSON.bind(this);\r\n        this.overrideExistingList = this.overrideExistingList.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.createItemsInputs();\r\n    }\r\n\r\n    createLista() {\r\n        let name = document.querySelector('#nombre').value.trim();\r\n        if(name === undefined || name === '') {\r\n            alert('Name can\\'t be empty');\r\n            return;\r\n        }\r\n\r\n        let firstChar = name.charAt(0);\r\n        if(firstChar >= 0 && firstChar <= 9) {\r\n            alert('The first character of the name can\\'t be a number');\r\n            return;\r\n        }\r\n\r\n        let type = document.querySelector('#type').value.trim();\r\n        let initialState = '';\r\n        if(type !== '') {\r\n            if(type.toLowerCase() === 'daily') {\r\n                initialState = 'Ausent';\r\n            } else if(type.toLowerCase() === 'quantities') {\r\n                initialState = 0;\r\n            } else if(type.toLowerCase() === 'dual-state' || type.toLowerCase() === 'triple-state') {\r\n                initialState = 'Pending';\r\n            }\r\n        } else {\r\n            alert('You must select a list type');\r\n            return; \r\n        }\r\n\r\n        let itemInputs = document.querySelectorAll('.new-item input');\r\n        let items = [];\r\n        for(let itemInput of itemInputs) {\r\n            if(itemInput.value !== '') {\r\n                items.push({\r\n                    \"name\": itemInput.value.trim(),\r\n                    \"value\": initialState\r\n                });\r\n            }\r\n        }\r\n\r\n        if(items.length === 0) {\r\n            alert('Can\\'t create a list with no items');\r\n            return;\r\n        }\r\n\r\n        let override = this.overrideExistingList(name);\r\n        if(override !== undefined) {\r\n            if(!override) {\r\n                return;\r\n            }\r\n        } else {\r\n            override = false;\r\n        }\r\n\r\n        let newList = {\r\n            \"name\": name,\r\n            \"type\": type,\r\n            \"items\": items\r\n        }\r\n\r\n        this.props.createList(newList, override);\r\n    }\r\n\r\n    overrideExistingList(listName) {\r\n        let override;\r\n        let cookies = document.cookie;\r\n        for(let cookie of cookies.split(';')) {\r\n            let name = cookie.split('=')[0];\r\n            if(name.trim() === listName) {\r\n                override = window.confirm('There is already a list with the same name.\\n' +\r\n                    'Do you want to override it\\'s type and items?');\r\n            }\r\n        }\r\n\r\n        return override;\r\n    }\r\n\r\n    createItemsInputs() {\r\n        let itemInputs = [];\r\n        let itemInputsAddRate = this.state.itemInputsAddRate;\r\n\r\n        for(let i = 1; i < itemInputsAddRate + 1; i++) {\r\n            itemInputs.push(<NewItem key={i} />);\r\n        }\r\n\r\n        this.setState({itemInputs: itemInputs});\r\n    }\r\n\r\n    addItemInput() {\r\n        let itemInputs = this.state.itemInputs;\r\n        let itemInputsAddRate = this.state.itemInputsAddRate;\r\n        let totalInputs = itemInputs.length;\r\n\r\n        for(let i = 1; i < itemInputsAddRate + 1; i++) {\r\n            itemInputs.push(<NewItem key={totalInputs + i} />);\r\n        }\r\n\r\n        this.setState({itemInputs: itemInputs});\r\n    }\r\n\r\n    onMouseEnter(className) {\r\n        let themeProps = this.props.themeProps;\r\n        let div = document.querySelector('.' + className);\r\n        div.style.backgroundColor = themeProps.textColor;\r\n        div.style.color = themeProps.mainColor;\r\n    }\r\n\r\n    onMouseLeave(className) {\r\n        let themeProps = this.props.themeProps;\r\n        let div = document.querySelector('.' + className);\r\n        div.style.backgroundColor = themeProps.mainColor;\r\n        div.style.color = themeProps.textColor;\r\n    }\r\n\r\n    importFromJSON() {\r\n        let textarea = document.querySelector('textarea#import-json');\r\n        let listAsJSON = textarea.value;\r\n        let newList;\r\n        try {\r\n            newList = JSON.parse(listAsJSON);\r\n        } catch(error) {\r\n            alert('An unexpected error ocurred\\nError detail:\\n\"' + String(error) + '\"');\r\n            return;\r\n        }\r\n        \r\n        let override = this.overrideExistingList(newList.name);\r\n        if(override !== undefined) {\r\n            if(!override) {\r\n                return;\r\n            }\r\n        } else {\r\n            override = false;\r\n        }\r\n\r\n        this.props.createList(newList, override);\r\n    }\r\n\r\n    render() {\r\n        let { themeProps, cancelNewList } = this.props; \r\n        let { itemInputs } = this.state;\r\n\r\n        const newListaStyle = {\r\n            backgroundColor: themeProps.mainColor,\r\n            borderColor: themeProps.borderColor,\r\n            color: themeProps.textColor\r\n        }\r\n        \r\n        const newListaHeaderStyle = {\r\n            borderColor: themeProps.borderColor,\r\n            color: themeProps.textColor\r\n        }\r\n\r\n        const buttonStyle = {\r\n            backgroundColor: themeProps.mainColor,\r\n            borderColor: themeProps.borderColor,\r\n            color: themeProps.textColor\r\n        }\r\n\r\n        const horizontalSeparatorStyle = {\r\n            borderColor: themeProps.borderColor\r\n        }\r\n\r\n        return(\r\n            <div className=\"new-lista\" style={newListaStyle} >\r\n                <div className=\"new-lista-header\" style={newListaHeaderStyle} >\r\n                    <p>New List</p>\r\n                </div>\r\n                <div className=\"new-lista-form\">\r\n                    <div className=\"label-input\">\r\n                        <div className=\"label\">\r\n                            <label htmlFor=\"nombre\">Name</label>\r\n                        </div>\r\n                        <div className=\"input\">\r\n                            <input type=\"text\" id=\"nombre\" name=\"nombre\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"label-input\">\r\n                        <div className=\"label\">\r\n                            <label htmlFor=\"type\">Type</label>\r\n                        </div>\r\n                        <div className=\"input\">\r\n                            <select name=\"type\" id=\"type\">\r\n                                <option value=\"\">--- Select Type ---</option>\r\n                                <option value=\"Daily\">Daily (Ausent, Here, Spoke)</option>\r\n                                <option value=\"Dual-State\">Dual state list (Pending, Done)</option>\r\n                                <option value=\"Triple-State\">Triple state list (Pending, Current, Done)</option>\r\n                                <option value=\"Quantities\">Quantities (Item and quantity)</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"label-input\">\r\n                        <div className=\"label\">\r\n                            <p>Items</p>\r\n                        </div>\r\n                        <div className=\"input\">\r\n                            {itemInputs}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"label-input\">\r\n                        <div className=\"label\"></div>\r\n                        <div className=\"input\">\r\n                            <button style={buttonStyle} className=\"button-add-inputs\" onClick={this.addItemInput} onMouseEnter={() => this.onMouseEnter('button-add-inputs')} onMouseLeave={() => this.onMouseLeave('button-add-inputs')} >(+) Item</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"buttons\">\r\n                        <button type=\"button\" className=\"button-cancel\" style={buttonStyle} onClick={cancelNewList} onMouseEnter={() => this.onMouseEnter('button-cancel')} onMouseLeave={() => this.onMouseLeave('button-cancel')} >Cancel</button>\r\n                        <button type=\"button\" className=\"button-add\" style={buttonStyle} onClick={this.createLista} onMouseEnter={() => this.onMouseEnter('button-add')} onMouseLeave={() => this.onMouseLeave('button-add')} >Add new list</button>\r\n                    </div>\r\n                    <div className=\"horizontalSeparator\" style={horizontalSeparatorStyle} />\r\n                    <div className=\"label-input\">\r\n                        <div className=\"label\">\r\n                            <label htmlFor=\"import-json\">JSON</label>\r\n                        </div>\r\n                        <div className=\"input\">\r\n                            <textarea resizable=\"true\" id=\"import-json\" rows=\"5\" cols=\"40\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"buttons\">\r\n                        <button type=\"button\" className=\"button-import\" style={buttonStyle} onClick={this.importFromJSON} onMouseEnter={() => this.onMouseEnter('button-import')} onMouseLeave={() => this.onMouseLeave('button-import')} >Import from JSON</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React, { Component } from 'react';\r\nimport Items from './../Items/Items';\r\nimport Listas from './../Listas/Listas'; \r\nimport NewLista from './../NewLista/NewLista';\r\nimport './Main.css';\r\n\r\nexport default class Main extends Component {\r\n\r\n    constructor(props) {\r\n        super(props); \r\n\r\n        this.state = {\r\n            lists: [],\r\n            currentList: {},\r\n            showNewListComponent: false,\r\n            key: 0,\r\n        }\r\n    \r\n        this.onClickList = this.onClickList.bind(this);\r\n        this.newList = this.newList.bind(this);\r\n        this.cancelNewList = this.cancelNewList.bind(this);\r\n        this.createList = this.createList.bind(this);\r\n        this.deleteList = this.deleteList.bind(this);\r\n        this.setLists = this.setLists.bind(this);\r\n        this.updateCookies = this.updateCookies.bind(this);\r\n        this.updateItemValue = this.updateItemValue.bind(this);\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.setLists();\r\n    }\r\n\r\n    setLists() {\r\n        let cookies = document.cookie;\r\n        let key = 0;\r\n\r\n        if(cookies !== '') {\r\n            let lists = [];\r\n\r\n            for(let cookie of cookies.split(';')) {\r\n                let listName = cookie.split('=')[0].trim();\r\n\r\n                if(listName !== 'themeProps' && listName !== 'customThemeProps') {\r\n                    let listInfo = cookie.split('=')[1].split(',');\r\n                    let type = listInfo[0];\r\n                    listInfo.shift();\r\n                    let items = listInfo;\r\n\r\n                    let listItems = [];\r\n                    for(let item of items) {\r\n                        let listItem;\r\n                        if(type.toLowerCase() === 'daily') {\r\n                            listItem = {\r\n                                \"name\": item.split(':')[0].trim(),\r\n                                \"value\": 'Ausent',\r\n                                \"key\": key\r\n                            }\r\n                        } else {\r\n                            listItem = {\r\n                                \"name\": item.split(':')[0].trim(),\r\n                                \"value\": item.split(':')[1].trim(),\r\n                                \"key\": key\r\n                            }\r\n                        }\r\n                        key++;\r\n                        listItems.push(listItem);\r\n                    }\r\n                    items = listItems;\r\n\r\n                    lists.push({\r\n                        \"name\": listName,\r\n                        \"type\": type, \r\n                        \"items\": items\r\n                    });\r\n                }\r\n            }\r\n            \r\n            this.setState({\r\n                lists,\r\n                key\r\n            });\r\n        } \r\n    }\r\n\r\n    newList() {\r\n        this.updateCookies(this.state.currentList);\r\n        this.setState({showNewListComponent: true});\r\n    }\r\n      \r\n    cancelNewList() {\r\n        this.setState({showNewListComponent: false});\r\n    }\r\n    \r\n    createList(newList, override) {\r\n        let { lists, key } = this.state;\r\n\r\n        for(let item of newList.items) {\r\n            item.key = key++;\r\n        }\r\n\r\n        if(override) {\r\n            for(let list of lists) {\r\n                if(list.name === newList.name) {\r\n                    list.type = newList.type;\r\n                    list.items = newList.items;\r\n                }\r\n            }\r\n        } else {\r\n            lists.push(newList);\r\n\r\n        }\r\n\r\n        this.setState((state) => {\r\n            return {\r\n                lists: lists,\r\n                currentList: newList,\r\n                showNewListComponent: false,\r\n                key: key\r\n            }\r\n        });\r\n\r\n        this.updateCookies(newList);\r\n    }\r\n\r\n    updateCookies(list) {\r\n        console.log(list);\r\n        if(list !== undefined && list.name !== undefined) {\r\n            let cookie = list.name + '=' + list.type + ',';\r\n\r\n            for(let i = 0; i < list.items.length; i++) {\r\n                let item = list.items[i];\r\n\r\n                if(list.type.toLowerCase() === 'daily') {\r\n                    cookie += item.name;\r\n                } else {\r\n                    cookie += item.name + ':' + item.value;\r\n                }\r\n\r\n                if(i !== list.items.length - 1) {\r\n                    cookie += ',';\r\n                } else {\r\n                    cookie += ';';\r\n                }\r\n            }\r\n            console.log(cookie);\r\n            cookie += 'Path=/;Expires=Thu, 01 Jan ' + (new Date().getFullYear() + 1) + ' 00:00:00 GMT;';\r\n            console.log(cookie);\r\n            console.log(document.cookie);\r\n            document.cookie = cookie;\r\n            console.log(document.cookie);\r\n        }\r\n    }\r\n\r\n    updateItemValue(itemName, newValue, listType) {\r\n        let { lists, currentList } = this.state;\r\n\r\n        for(let list of lists) {\r\n            if(list.name === currentList.name) {\r\n                for(let item of list.items) {\r\n                    if(item.name === itemName) {\r\n                        item.value = newValue;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            lists,\r\n            currentList\r\n        });\r\n\r\n        if(listType.toLowerCase() !== 'daily') {\r\n            this.updateCookies(currentList);\r\n        }\r\n    }\r\n    \r\n    onClickList(listName) {\r\n        this.setState({currentList: {}});\r\n        let currentList = {};\r\n\r\n        if(this.state.currentList !== undefined\r\n            && this.state.currentList.name !== undefined\r\n            && this.state.currentList.type.toLowerCase() !== 'daily'\r\n        ) {\r\n            this.updateCookies(this.state.currentList);\r\n        }\r\n    \r\n        for(let list of this.state.lists) {\r\n            if(list.name === listName) {\r\n                currentList = list;\r\n            }\r\n        }\r\n    \r\n        this.setState({\r\n            currentList: currentList,\r\n            showNewListComponent: false\r\n        });\r\n    }\r\n    \r\n    deleteList(listName) {\r\n        let lists = this.state.lists;\r\n        let currentList = this.state.currentList;\r\n\r\n        if(currentList !== undefined \r\n            && listName === currentList.name\r\n        ) {\r\n            this.setState({currentList: {}});\r\n        }\r\n\r\n        let listIndex;\r\n        for(let list of lists) {\r\n            if(list.name === listName) {\r\n                listIndex = lists.indexOf(list);\r\n            }\r\n        }\r\n        \r\n        let list = lists[listIndex];\r\n        document.cookie = list.name +'=; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT;';\r\n\r\n        lists.splice(listIndex, 1)\r\n        this.setState({lists: lists});\r\n    }\r\n\r\n    render() {\r\n        const { themeProps } = this.props;\r\n        const { lists, currentList, showNewListComponent} = this.state;\r\n\r\n        return(\r\n          <div className=\"main\" >\r\n            <Listas lists={lists} \r\n                onClickList={this.onClickList} \r\n                newList={this.newList}\r\n                deleteList={this.deleteList}\r\n                themeProps={themeProps}\r\n            />\r\n            { \r\n                !showNewListComponent ? \r\n                    (currentList.name !== undefined ? \r\n                        <Items list={currentList} themeProps={themeProps} updateItemValue={this.updateItemValue} /> \r\n                        : \r\n                        '') \r\n                    :\r\n                    <NewLista \r\n                        cancelNewList={this.cancelNewList} \r\n                        createList={this.createList}  \r\n                        themeProps={themeProps}\r\n                    /> \r\n            }\r\n          </div>\r\n        );\r\n    }\r\n\r\n}","import React, { Component } from 'react';\r\nimport './Footer.css';\r\n\r\nexport default class Footer extends Component {\r\n\r\n    render() {\r\n        const { themeProps } = this.props;\r\n\r\n        const footerStyle = {\r\n            backgroundColor: themeProps.mainColor,\r\n            borderColor: themeProps.borderColor,\r\n        }\r\n\r\n        const aStyle = {\r\n            color: themeProps.textColor\r\n        }\r\n\r\n        return(\r\n            <div className=\"footer\" style={footerStyle}>\r\n                <div className=\"bug-report\">\r\n                    <a style={aStyle} href=\"mailto:list.helper.bug.report@gmail.com\">Report bug</a>\r\n                </div>\r\n                <div className=\"contact\">\r\n                    <a style={aStyle} href=\"mailto:list.helper.dev.contact@gmail.com\">Contact</a>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n}","import React, { Component } from 'react';\r\nimport Header from './components/Header/Header';\r\nimport Main from './components/Main/Main';\r\nimport Footer from './components/Footer/Footer';\r\nimport './App.css';\r\n\r\nexport default class App extends Component {\r\n\r\n    constructor(props) {\r\n        super(props); \r\n\r\n        this.state = {\r\n            theme: 0,\r\n            mainColor: '',\r\n            secondaryColor: '',\r\n            borderColor: '',\r\n            textColor: '',\r\n        }\r\n\r\n        this.setTheme = this.setTheme.bind(this);\r\n    }\r\n\r\n    setTheme(themeProps) {\r\n        let theme, mainColor, secondaryColor, borderColor, textColor;\r\n\r\n        if(themeProps === undefined) {\r\n            theme = 0;\r\n            mainColor = '#000';\r\n            secondaryColor = '#fff';\r\n            borderColor = '#383434';\r\n            textColor = '#fff';\r\n        } else {\r\n            theme = themeProps.theme;\r\n            mainColor = themeProps.mainColor;\r\n            secondaryColor = themeProps.secondaryColor;\r\n            borderColor = themeProps.borderColor;\r\n            textColor = themeProps.textColor;\r\n        }\r\n\r\n        this.setState({\r\n            theme: theme,\r\n            mainColor: mainColor,\r\n            secondaryColor: secondaryColor,\r\n            borderColor: borderColor,\r\n            textColor: textColor\r\n        });\r\n\r\n        document.cookie = \r\n            'themeProps=' + \r\n                theme + ',' +\r\n                mainColor + ',' + \r\n                secondaryColor + ',' + \r\n                borderColor + ',' + \r\n                textColor + \r\n                '; Path=/; Expires=Thu, 01 Jan 2022 00:00:01 GMT;';\r\n\r\n        if(theme === 2) {\r\n            document.cookie = \r\n            'customThemeProps=' + \r\n                mainColor + ',' + \r\n                secondaryColor + ',' + \r\n                borderColor + ',' + \r\n                textColor + \r\n                '; Path=/; Expires=Thu, 01 Jan 2022 00:00:01 GMT;';\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { theme, mainColor, secondaryColor, borderColor, textColor } = this.state;\r\n\r\n        const appStyle = {\r\n            backgroundColor: secondaryColor\r\n        }\r\n\r\n        let themeProps = {\r\n            theme: theme,\r\n            mainColor: mainColor,\r\n            secondaryColor: secondaryColor,\r\n            borderColor: borderColor,\r\n            textColor: textColor\r\n        }\r\n\r\n        if(window.screen.width < 720 || window.innerWidth < 720) {\r\n            console.log('window screen width: ' + window.screen.width);\r\n            console.log('window innerWidth: ' + window.innerWidth);\r\n            return (\r\n                <div className=\"app\" style={appStyle}>\r\n                    <h1>Sorry, we don't have support for this screen resolution yet. Try on a device with a width resolution greater than 720px.</h1>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className=\"app\" style={appStyle}>\r\n                <Header setTheme={this.setTheme} themeProps={themeProps} />\r\n                <Main themeProps={themeProps} />\r\n                <Footer themeProps={themeProps} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}